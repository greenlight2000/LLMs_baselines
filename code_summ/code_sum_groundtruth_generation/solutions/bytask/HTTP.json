[{"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Python", "code": "\nPython 3\n\n\nimport urllib.request\nprint(urllib.request.urlopen(\"http://rosettacode.org\").read())\n\n\nfrom http.client import HTTPConnection\nconn = HTTPConnection(\"example.com\")\n# If you need to use set_tunnel, do so here.\nconn.request(\"GET\", \"/\")  \n# Alternatively, you can use connect(), followed by the putrequest, putheader and endheaders functions.\nresult = conn.getresponse()\nr1 = result.read() # This retrieves the entire contents.\n\nPython 2\n\n\nimport urllib\nprint urllib.urlopen(\"http://rosettacode.org\").read()\n\n\nimport urllib2\nprint urllib2.urlopen(\"http://rosettacode.org\").read()\n\n\nLibrary: Requests\nWorks with: Python version 2.7, 3.4\u20133.7\nimport requests\nprint(requests.get(\"http://rosettacode.org\").text)\n\n", "explain": "Using the urllib.request module.\nUsing a more low-level http.client library.  \nUsing the urllib library.\nUsing the urllib2 library.\n\n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "C", "code": "\nLibrary: libcurl\n#include <stdio.h>\n#include <stdlib.h>\n#include <curl/curl.h>\n\nint\nmain(void)\n{\n        CURL *curl;\n        char buffer[CURL_ERROR_SIZE];\n\n        if ((curl = curl_easy_init()) != NULL) {\n                curl_easy_setopt(curl, CURLOPT_URL, \"http://www.rosettacode.org/\");\n                curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1);\n                curl_easy_setopt(curl, CURLOPT_ERRORBUFFER, buffer);\n                if (curl_easy_perform(curl) != CURLE_OK) {\n                        fprintf(stderr, \"%s\\n\", buffer);\n                        return EXIT_FAILURE;\n                }\n                curl_easy_cleanup(curl);\n        }\n        return EXIT_SUCCESS;\n}\n\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "C++", "code": "\n#include <winsock2.h>\n#include <ws2tcpip.h>\n#include <iostream>\n\nint main() {\n\tWSADATA wsaData;\n\tWSAStartup( MAKEWORD( 2, 2 ), &wsaData );\n\n\taddrinfo *result = NULL;\n\taddrinfo hints;\n\n\tZeroMemory( &hints, sizeof( hints ) );\n\thints.ai_family = AF_UNSPEC;\n\thints.ai_socktype = SOCK_STREAM;\n\thints.ai_protocol = IPPROTO_TCP;\n\n\tgetaddrinfo( \"74.125.45.100\", \"80\", &hints, &result ); // http://www.google.com\n\n\tSOCKET s = socket( result->ai_family, result->ai_socktype, result->ai_protocol );\n\n\tconnect( s, result->ai_addr, (int)result->ai_addrlen );\n\n\tfreeaddrinfo( result );\n\n\tsend( s, \"GET / HTTP/1.0\\n\\n\", 16, 0 );\n\n\tchar buffer[512];\n\tint bytes;\n\n\tdo {\n\t\tbytes = recv( s, buffer, 512, 0 );\n\n\t\tif ( bytes > 0 )\n\t\t\tstd::cout.write(buffer, bytes);\n\t} while ( bytes > 0 );\n\n\treturn 0;\n}\n\nLibrary: U++\n#include <Web/Web.h>\n\nusing namespace Upp;\n\nCONSOLE_APP_MAIN\n{\n\tCout() << HttpClient(\"www.rosettacode.org\").ExecuteRedirect();\n}\n\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Java", "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.net.URL;\n\nvoid printContent(String address) throws URISyntaxException, IOException {\n    URL url = new URI(address).toURL();\n    try (BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))) {\n        String line;\n        while ((line = reader.readLine()) != null)\n            System.out.println(line);\n    }\n}\n\n\nimport java.net.URI;\nimport java.net.http.HttpClient;\nimport java.net.http.HttpRequest;\nimport java.net.http.HttpResponse;\nimport java.nio.charset.Charset;\n\npublic class Main {\n    public static void main(String[] args) {\n        var request = HttpRequest.newBuilder(URI.create(\"https://www.rosettacode.org\"))\n                .GET()\n                .build();\n\n        HttpClient.newHttpClient()\n                .sendAsync(request, HttpResponse.BodyHandlers.ofString(Charset.defaultCharset()))\n                .thenApply(HttpResponse::body)\n                .thenAccept(System.out::println)\n                .join();\n    }\n}\n\nLibrary: Apache Commons IO\nimport org.apache.commons.io.IOUtils;\nimport java.net.URL;\n\npublic class Main {\t\n    public static void main(String[] args) throws Exception {\n        IOUtils.copy(new URL(\"http://rosettacode.org\").openStream(),System.out);    \t    \t    \t\t    \n    }\n}\n\n", "explain": "The URL class offers an openStream method which will make a connection and return an InputStream.\n\nUsing the standard Java 11 HTTP Client\n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "C#", "code": "\nusing System;\nusing System.Text;\nusing System.Net;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        WebClient wc = new WebClient();\n        string content = wc.DownloadString(\"http://www.google.com\");\n        Console.WriteLine(content);\n    }\n}\n\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "JavaScript", "code": "\nBrowser[edit]\nvar req = new XMLHttpRequest();\nreq.onload = function() {\n  console.log(this.responseText);\n};\n\nreq.open('get', 'http://rosettacode.org', true);\nreq.send()\n\n\nfetch('http://rosettacode.org').then(function(response) {\n  return response.text();\n}).then(function(myText) {\n  console.log(myText);\n});\n\n\n/**\n * @name _http\n * @description Generic API Client using XMLHttpRequest\n * @param {string} url The URI/URL to connect to\n * @param {string} method The HTTP method to invoke- GET, POST, etc\n * @param {function} callback Once the HTTP request has completed, responseText is passed into this function for execution\n * @param {object} params Query Parameters in a JavaScript Object (Optional)\n * \n */\nfunction _http(url, method, callback, params) {\n    var xhr,\n        reqUrl;\n\n    xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function xhrProc() {\n        if (xhr.readyState == 4 && xhr.status == 200) {\n            callback(xhr.responseText);\n        }\n    };\n\n\n    /** If Query Parameters are present, handle them... */\n    if (typeof params === 'undefined') {\n        reqUrl = url;\n    } else {\n        switch (method) {\n            case 'GET':\n                reqUrl = url + procQueryParams(params);\n                break;\n            case 'POST':\n                reqUrl = url;\n                break;\n            default:\n        }\n    }\n\n\n    /** Send the HTTP Request */\n    if (reqUrl) {\n        xhr.open(method, reqUrl, true);\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n\n        if (method === 'POST') {\n            xhr.send(params);\n        } else {\n            xhr.send();\n        }\n    }\n\n\n    /**\n     * @name procQueryParams\n     * @description Return function that converts Query Parameters from a JavaScript Object to a proper URL encoded string\n     * @param {object} params Query Parameters in a JavaScript Object\n     * \n     */\n    function procQueryParams(params) {\n        return \"?\" + Object\n            .keys(params)\n            .map(function (key) {\n                return key + \"=\" + encodeURIComponent(params[key])\n            })\n            .join(\"&\")\n    }\n}\n\n\n$.get('http://rosettacode.org', function(data) {\n  console.log(data);\n};\n\nNode.js[edit]\n\nconst http = require('http');\n \nhttp.get('http://rosettacode.org', (resp) => {\n\n  let data = '';\n \n  // A chunk of data has been recieved.\n  resp.on('data', (chunk) => {\n    data += chunk;\n  });\n \n  // The whole response has been received. Print out the result.\n  resp.on('end', () => {\n    console.log(\"Data:\", data);\n  });\n \n}).on(\"error\", (err) => {\n  console.log(\"Error: \" + err.message);\n});\n\n", "explain": "Using fetch API:\nAs a repeatable function:\nUsing jQuery:\nWith Node.js, using only the included http module.\n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Visual_Basic_.NET", "code": "\nImports System.Net\n\nDim client As WebClient = New WebClient()\nDim content As String = client.DownloadString(\"http://www.google.com\")\nConsole.WriteLine(content)\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "PHP", "code": "\nreadfile(\"http://www.rosettacode.org\");\n\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Go", "code": "\npackage main\n\nimport (\n    \"io\"\n    \"log\"\n    \"net/http\"\n    \"os\"\n)\n\nfunc main() {\n    r, err := http.Get(\"http://rosettacode.org/robots.txt\")\n    if err != nil {\n        log.Fatalln(err)\n    }\n    io.Copy(os.Stdout, r.Body)\n}\n\n\nUser-agent: *\nAllow: /mw/images/\nAllow: /mw/skins/\nAllow: /mw/title.png\nDisallow: /w/\nDisallow: /mw/\nDisallow: /wiki/Special:\n\n", "explain": "Output:\n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Delphi", "code": "\n\nprogram HTTP;\n\n{$APPTYPE CONSOLE}\n\n{$DEFINE DEBUG}\n\nuses\n  Classes,\n  httpsend; // Synapse httpsend class\n\nvar\n  Response: TStrings;\n  HTTPObj: THTTPSend;\n\nbegin\n  HTTPObj := THTTPSend.Create;\n  try\n    { Stringlist object to capture HTML returned\n      from URL }\n    Response := TStringList.Create;\n    try\n      if HTTPObj.HTTPMethod('GET','http://www.mgis.uk.com') then\n        begin\n          { Load HTTP Document into Stringlist }\n          Response.LoadFromStream(HTTPObj.Document);\n          { Write the response to the console window }\n          Writeln(Response.Text);\n        end\n        else\n        Writeln('Error retrieving data');\n\n    finally\n      Response.Free;\n    end;\n\n  finally\n    HTTPObj.Free;\n  end;\n\n  // Keep console window open\n  Readln;\n\nend.\n\n\nprogram ShowHTTP;\n\n{$APPTYPE CONSOLE}\n\nuses IdHttp;\n\nvar\n  s: string;\n  lHTTP: TIdHTTP;\nbegin\n  lHTTP := TIdHTTP.Create(nil);\n  try\n    lHTTP.HandleRedirects := True;\n    s := lHTTP.Get('http://www.rosettacode.org');\n    Writeln(s);\n  finally\n    lHTTP.Free;\n  end;\nend.\n\n", "explain": "Simple example using the free Synapse TCP/IP library [1]\n\nUsing Indy:\n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Ruby", "code": "\n\nrequire 'open-uri'\n\nprint open(\"http://rosettacode.org\") {|f| f.read}\n\nrequire 'fileutils'\nrequire 'open-uri'\n\nopen(\"http://rosettacode.org/\") {|f| FileUtils.copy_stream(f, $stdout)}\n", "explain": "The simple way loads the entire content into memory, then prints it.\nIf the content might be large, the better way uses FileUtils.copy_stream.\n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Rust", "code": "\n\n[dependencies]\nhyper = \"0.6\"\n\n//cargo-deps: hyper=\"0.6\"\n// The above line can be used with cargo-script which makes cargo's dependency handling more convenient for small programs\nextern crate hyper;\n\nuse std::io::Read;\nuse hyper::client::Client;\n\nfn main() {\n    let client = Client::new();\n    let mut resp = client.get(\"http://rosettacode.org\").send().unwrap();\n    let mut body = String::new();\n    resp.read_to_string(&mut body).unwrap();\n    println!(\"{}\", body);\n}\n", "explain": "Cargo.toml\nsrc/main.rs\n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Swift", "code": "\nimport Foundation\n\nlet request = NSURLRequest(URL: NSURL(string: \"http://rosettacode.org/\")!)\n\n// Using trailing closure\nNSURLConnection.sendAsynchronousRequest(request, queue: NSOperationQueue()) {res, data, err in\n    \n    // data is binary\n    if (data\u00a0!= nil) {\n        let string = NSString(data: data!, encoding: NSUTF8StringEncoding)\n        println(string)\n    }\n}\n\nCFRunLoopRun() // dispatch\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "R", "code": "\nLibrary: RCurl\nLibrary: XML\n\nlibrary(RCurl)\nwebpage <- getURL(\"http://rosettacode.org\")\n\n#If you are linking to a page that no longer exists and need to follow the redirect, use followlocation=TRUE\nwebpage <- getURL(\"http://www.rosettacode.org\", .opts=list(followlocation=TRUE))\n\n#If you are behind a proxy server, you will need to use something like:\nwebpage <- getURL(\"http://rosettacode.org\", \n   .opts=list(proxy=\"123.123.123.123\", proxyusername=\"domain\\\\username\", proxypassword=\"mypassword\", proxyport=8080))\n#Don't forget that backslashes in your username or password need to be escaped!\n\n\nlibrary(XML)\npagetree <- htmlTreeParse(webpage )\npagetree$children$html\n\n", "explain": "First, retrieve the webpage.\nNow parse the html code into a tree and print the html.\n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "COBOL", "code": "\n\nCOBOL  >>SOURCE FORMAT IS FIXED\n       identification division.\n       program-id. curl-rosetta.\n\n       environment division.\n       configuration section.\n       repository.\n           function read-url\n           function all intrinsic.\n\n       data division.\n       working-storage section.\n\n       copy \"gccurlsym.cpy\".\n\n       01 web-page             pic x(16777216).\n       01 curl-status          usage binary-long.\n\n       01 cli                  pic x(7) external.\n          88 helping           values \"-h\", \"-help\", \"help\", spaces.\n          88 displaying        value \"display\".            \n          88 summarizing       value \"summary\". \n\n      *> ***************************************************************\n       procedure division.\n       accept cli from command-line\n       if helping then\n           display \"./curl-rosetta [help|display|summary]\"\n           goback\n       end-if\n\n      *>\n      *> Read a web resource into fixed ram.\n      *>   Caller is in charge of sizing the buffer,\n      *>     (or getting trickier with the write callback)\n      *> Pass URL and working-storage variable,\n      *>   get back libcURL error code or 0 for success\n\n       move read-url(\"http://www.rosettacode.org\", web-page)\n         to curl-status\n\n       perform check\n       perform show\n\n       goback.\n      *> ***************************************************************\n\n      *> Now tesing the result, relying on the gccurlsym\n      *>   GnuCOBOL Curl Symbol copy book\n       check.\n       if curl-status not equal zero then\n           display\n               curl-status \" \"\n               CURLEMSG(curl-status) upon syserr\n       end-if\n       .\n\n      *> And display the page\n       show.\n       if summarizing then\n           display \"Length: \" stored-char-length(web-page)\n       end-if\n       if displaying then\n           display trim(web-page trailing) with no advancing\n       end-if\n       .\n\n       REPLACE ALSO ==:EXCEPTION-HANDLERS:== BY\n       ==\n      *> informational warnings and abends\n       soft-exception.\n         display space upon syserr\n         display \"--Exception Report-- \" upon syserr\n         display \"Time of exception:   \" current-date upon syserr\n         display \"Module:              \" module-id upon syserr\n         display \"Module-path:         \" module-path upon syserr\n         display \"Module-source:       \" module-source upon syserr\n         display \"Exception-file:      \" exception-file upon syserr\n         display \"Exception-status:    \" exception-status upon syserr\n         display \"Exception-location:  \" exception-location upon syserr\n         display \"Exception-statement: \" exception-statement upon syserr\n       .\n\n       hard-exception.\n           perform soft-exception\n           stop run returning 127 \n       .\n       ==.\n\n       end program curl-rosetta.\n      *> ***************************************************************\n\n      *> ***************************************************************\n      *>\n      *> The function hiding all the curl details\n      *>\n      *> Purpose:   Call libcURL and read into memory\n      *> ***************************************************************\n       identification division.\n       function-id. read-url.\n\n       environment division.\n       configuration section.\n       repository.\n           function all intrinsic.\n\n       data division.\n       working-storage section.\n\n       copy \"gccurlsym.cpy\".\n\n       replace also ==:CALL-EXCEPTION:== by\n       ==\n           on exception\n               perform hard-exception\n       ==.\n\n       01 curl-handle          usage pointer.\n       01 callback-handle      usage procedure-pointer.\n       01 memory-block.\n          05 memory-address    usage pointer sync.\n          05 memory-size       usage binary-long sync.\n          05 running-total     usage binary-long sync.\n       01 curl-result          usage binary-long.\n\n       01 cli                  pic x(7) external.\n          88 helping           values \"-h\", \"-help\", \"help\", spaces.\n          88 displaying        value \"display\".            \n          88 summarizing       value \"summary\". \n\n       linkage section.\n       01 url                  pic x any length.\n       01 buffer               pic x any length.\n       01 curl-status          usage binary-long.\n\n      *> ***************************************************************\n       procedure division using url buffer returning curl-status.\n       if displaying or summarizing then \n           display \"Read: \" url upon syserr\n       end-if\n\n      *> initialize libcurl, hint at missing library if need be\n       call \"curl_global_init\" using by value CURL_GLOBAL_ALL\n           on exception\n               display\n                   \"need libcurl, link with -lcurl\" upon syserr\n               stop run returning 1\n       end-call\n\n      *> initialize handle\n       call \"curl_easy_init\" returning curl-handle\n           :CALL-EXCEPTION:\n       end-call\n       if curl-handle equal NULL then\n           display \"no curl handle\" upon syserr\n           stop run returning 1\n       end-if\n\n      *> Set the URL\n       call \"curl_easy_setopt\" using\n           by value curl-handle\n           by value CURLOPT_URL\n           by reference concatenate(trim(url trailing), x\"00\")\n           :CALL-EXCEPTION:\n       end-call\n\n      *> follow all redirects\n       call \"curl_easy_setopt\" using\n           by value curl-handle\n           by value CURLOPT_FOLLOWLOCATION\n           by value 1\n           :CALL-EXCEPTION:\n       end-call\n\n      *> set the call back to write to memory\n       set callback-handle to address of entry \"curl-write-callback\"\n       call \"curl_easy_setopt\" using\n           by value curl-handle\n           by value CURLOPT_WRITEFUNCTION\n           by value callback-handle\n           :CALL-EXCEPTION:\n       end-call\n\n      *> set the curl handle data handling structure\n       set memory-address to address of buffer\n       move length(buffer) to memory-size\n       move 1 to running-total\n\n       call \"curl_easy_setopt\" using\n           by value curl-handle\n           by value CURLOPT_WRITEDATA\n           by value address of memory-block\n           :CALL-EXCEPTION:\n       end-call\n\n      *> some servers demand an agent\n       call \"curl_easy_setopt\" using\n           by value curl-handle\n           by value CURLOPT_USERAGENT\n           by reference concatenate(\"libcurl-agent/1.0\", x\"00\")\n           :CALL-EXCEPTION:\n       end-call\n\n      *> let curl do all the hard work\n       call \"curl_easy_perform\" using\n           by value curl-handle\n           returning curl-result\n           :CALL-EXCEPTION:\n       end-call\n\n      *> the call back will handle filling ram, return the result code\n       move curl-result to curl-status\n\n      *> curl clean up, more important if testing cookies\n       call \"curl_easy_cleanup\" using\n           by value curl-handle\n           returning omitted\n           :CALL-EXCEPTION:\n       end-call\n\n       goback.\n\n       :EXCEPTION-HANDLERS:\n\n       end function read-url.\n      *> ***************************************************************\n\n      *> ***************************************************************\n      *> Supporting libcurl callback\n       identification division.\n       program-id. curl-write-callback.\n\n       environment division.\n       configuration section.\n       repository.\n           function all intrinsic.\n\n       data division.\n       working-storage section.\n       01 real-size            usage binary-long.\n\n      *> libcURL will pass a pointer to this structure in the callback\n       01 memory-block         based.\n          05 memory-address    usage pointer sync.\n          05 memory-size       usage binary-long sync.\n          05 running-total     usage binary-long sync.\n\n       01 content-buffer       pic x(65536) based.\n       01 web-space            pic x(16777216) based.\n       01 left-over            usage binary-long.\n\n       linkage section.\n       01 contents             usage pointer.\n       01 element-size         usage binary-long.\n       01 element-count        usage binary-long.\n       01 memory-structure     usage pointer.\n\n      *> ***************************************************************\n       procedure division\n           using\n              by value contents\n              by value element-size\n              by value element-count\n              by value memory-structure\n          returning real-size.\n\n       set address of memory-block to memory-structure\n       compute real-size = element-size * element-count end-compute\n\n      *> Fence off the end of buffer\n       compute\n           left-over = memory-size - running-total\n       end-compute\n       if left-over > 0 and < real-size then\n           move left-over to real-size\n       end-if\n\n      *> if there is more buffer, and data not zero length\n       if (left-over > 0) and (real-size > 1) then\n           set address of content-buffer to contents\n           set address of web-space to memory-address\n\n           move content-buffer(1:real-size)\n             to web-space(running-total:real-size)\n\n           add real-size to running-total\n       else\n           display \"curl buffer sizing problem\" upon syserr\n       end-if\n\n       goback.\n       end program curl-write-callback.\n\n\n      *> manifest constants for libcurl\n      *> Usage: COPY occurlsym  inside data division\n      *>  Taken from include/curl/curl.h 2013-12-19\n\n      *> Functional enums\n       01 CURL_MAX_HTTP_HEADER CONSTANT AS     102400.\n\n       78 CURL_GLOBAL_ALL                      VALUE 3.\n\n       78 CURLOPT_FOLLOWLOCATION               VALUE 52.\n       78 CURLOPT_WRITEDATA                    VALUE 10001.\n       78 CURLOPT_URL                          VALUE 10002.\n       78 CURLOPT_USERAGENT                    VALUE 10018.\n       78 CURLOPT_WRITEFUNCTION                VALUE 20011.\n       78 CURLOPT_COOKIEFILE                   VALUE 10031.\n       78 CURLOPT_COOKIEJAR                    VALUE 10082.\n       78 CURLOPT_COOKIELIST                   VALUE 10135.\n\n      *> Informationals\n       78 CURLINFO_COOKIELIST                  VALUE 4194332.\n\n      *> Result codes\n       78 CURLE_OK                             VALUE 0.\n      *> Error codes\n       78 CURLE_UNSUPPORTED_PROTOCOL           VALUE 1.\n       78 CURLE_FAILED_INIT                    VALUE 2.\n       78 CURLE_URL_MALFORMAT                  VALUE 3.\n       78 CURLE_OBSOLETE4                      VALUE 4.\n       78 CURLE_COULDNT_RESOLVE_PROXY          VALUE 5.\n       78 CURLE_COULDNT_RESOLVE_HOST           VALUE 6.\n       78 CURLE_COULDNT_CONNECT                VALUE 7.\n       78 CURLE_FTP_WEIRD_SERVER_REPLY         VALUE 8.\n       78 CURLE_REMOTE_ACCESS_DENIED           VALUE 9.\n       78 CURLE_OBSOLETE10                     VALUE 10.\n       78 CURLE_FTP_WEIRD_PASS_REPLY           VALUE 11.\n       78 CURLE_OBSOLETE12                     VALUE 12.\n       78 CURLE_FTP_WEIRD_PASV_REPLY           VALUE 13.\n       78 CURLE_FTP_WEIRD_227_FORMAT           VALUE 14.\n       78 CURLE_FTP_CANT_GET_HOST              VALUE 15.\n       78 CURLE_OBSOLETE16                     VALUE 16.\n       78 CURLE_FTP_COULDNT_SET_TYPE           VALUE 17.\n       78 CURLE_PARTIAL_FILE                   VALUE 18.\n       78 CURLE_FTP_COULDNT_RETR_FILE          VALUE 19.\n       78 CURLE_OBSOLETE20                     VALUE 20.\n       78 CURLE_QUOTE_ERROR                    VALUE 21.\n       78 CURLE_HTTP_RETURNED_ERROR            VALUE 22.\n       78 CURLE_WRITE_ERROR                    VALUE 23.\n       78 CURLE_OBSOLETE24                     VALUE 24.\n       78 CURLE_UPLOAD_FAILED                  VALUE 25.\n       78 CURLE_READ_ERROR                     VALUE 26.\n       78 CURLE_OUT_OF_MEMORY                  VALUE 27.\n       78 CURLE_OPERATION_TIMEDOUT             VALUE 28.\n       78 CURLE_OBSOLETE29                     VALUE 29.\n       78 CURLE_FTP_PORT_FAILED                VALUE 30.\n       78 CURLE_FTP_COULDNT_USE_REST           VALUE 31.\n       78 CURLE_OBSOLETE32                     VALUE 32.\n       78 CURLE_RANGE_ERROR                    VALUE 33.\n       78 CURLE_HTTP_POST_ERROR                VALUE 34.\n       78 CURLE_SSL_CONNECT_ERROR              VALUE 35.\n       78 CURLE_BAD_DOWNLOAD_RESUME            VALUE 36.\n       78 CURLE_FILE_COULDNT_READ_FILE         VALUE 37.\n       78 CURLE_LDAP_CANNOT_BIND               VALUE 38.\n       78 CURLE_LDAP_SEARCH_FAILED             VALUE 39.\n       78 CURLE_OBSOLETE40                     VALUE 40.\n       78 CURLE_FUNCTION_NOT_FOUND             VALUE 41.\n       78 CURLE_ABORTED_BY_CALLBACK            VALUE 42.\n       78 CURLE_BAD_FUNCTION_ARGUMENT          VALUE 43.\n       78 CURLE_OBSOLETE44                     VALUE 44.\n       78 CURLE_INTERFACE_FAILED               VALUE 45.\n       78 CURLE_OBSOLETE46                     VALUE 46.\n       78 CURLE_TOO_MANY_REDIRECTS             VALUE 47.\n       78 CURLE_UNKNOWN_TELNET_OPTION          VALUE 48.\n       78 CURLE_TELNET_OPTION_SYNTAX           VALUE 49.\n       78 CURLE_OBSOLETE50                     VALUE 50.\n       78 CURLE_PEER_FAILED_VERIFICATION       VALUE 51.\n       78 CURLE_GOT_NOTHING                    VALUE 52.\n       78 CURLE_SSL_ENGINE_NOTFOUND            VALUE 53.\n       78 CURLE_SSL_ENGINE_SETFAILED           VALUE 54.\n       78 CURLE_SEND_ERROR                     VALUE 55.\n       78 CURLE_RECV_ERROR                     VALUE 56.\n       78 CURLE_OBSOLETE57                     VALUE 57.\n       78 CURLE_SSL_CERTPROBLEM                VALUE 58.\n       78 CURLE_SSL_CIPHER                     VALUE 59.\n       78 CURLE_SSL_CACERT                     VALUE 60.\n       78 CURLE_BAD_CONTENT_ENCODING           VALUE 61.\n       78 CURLE_LDAP_INVALID_URL               VALUE 62.\n       78 CURLE_FILESIZE_EXCEEDED              VALUE 63.\n       78 CURLE_USE_SSL_FAILED                 VALUE 64.\n       78 CURLE_SEND_FAIL_REWIND               VALUE 65.\n       78 CURLE_SSL_ENGINE_INITFAILED          VALUE 66.\n       78 CURLE_LOGIN_DENIED                   VALUE 67.\n       78 CURLE_TFTP_NOTFOUND                  VALUE 68.\n       78 CURLE_TFTP_PERM                      VALUE 69.\n       78 CURLE_REMOTE_DISK_FULL               VALUE 70.\n       78 CURLE_TFTP_ILLEGAL                   VALUE 71.\n       78 CURLE_TFTP_UNKNOWNID                 VALUE 72.\n       78 CURLE_REMOTE_FILE_EXISTS             VALUE 73.\n       78 CURLE_TFTP_NOSUCHUSER                VALUE 74.\n       78 CURLE_CONV_FAILED                    VALUE 75.\n       78 CURLE_CONV_REQD                      VALUE 76.\n       78 CURLE_SSL_CACERT_BADFILE             VALUE 77.\n       78 CURLE_REMOTE_FILE_NOT_FOUND          VALUE 78.\n       78 CURLE_SSH                            VALUE 79.\n       78 CURLE_SSL_SHUTDOWN_FAILED            VALUE 80.\n       78 CURLE_AGAIN                          VALUE 81.\n\n      *> Error strings\n       01 LIBCURL_ERRORS.\n          02 CURLEVALUES.\n             03 FILLER PIC X(30) VALUE \"CURLE_UNSUPPORTED_PROTOCOL    \".\n             03 FILLER PIC X(30) VALUE \"CURLE_FAILED_INIT             \".\n             03 FILLER PIC X(30) VALUE \"CURLE_URL_MALFORMAT           \".\n             03 FILLER PIC X(30) VALUE \"CURLE_OBSOLETE4               \".\n             03 FILLER PIC X(30) VALUE \"CURLE_COULDNT_RESOLVE_PROXY   \".\n             03 FILLER PIC X(30) VALUE \"CURLE_COULDNT_RESOLVE_HOST    \".\n             03 FILLER PIC X(30) VALUE \"CURLE_COULDNT_CONNECT         \".\n             03 FILLER PIC X(30) VALUE \"CURLE_FTP_WEIRD_SERVER_REPLY  \".\n             03 FILLER PIC X(30) VALUE \"CURLE_REMOTE_ACCESS_DENIED    \".\n             03 FILLER PIC X(30) VALUE \"CURLE_OBSOLETE10              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_FTP_WEIRD_PASS_REPLY    \".\n             03 FILLER PIC X(30) VALUE \"CURLE_OBSOLETE12              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_FTP_WEIRD_PASV_REPLY    \".\n             03 FILLER PIC X(30) VALUE \"CURLE_FTP_WEIRD_227_FORMAT    \".\n             03 FILLER PIC X(30) VALUE \"CURLE_FTP_CANT_GET_HOST       \".\n             03 FILLER PIC X(30) VALUE \"CURLE_OBSOLETE16              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_FTP_COULDNT_SET_TYPE    \".\n             03 FILLER PIC X(30) VALUE \"CURLE_PARTIAL_FILE            \".\n             03 FILLER PIC X(30) VALUE \"CURLE_FTP_COULDNT_RETR_FILE   \".\n             03 FILLER PIC X(30) VALUE \"CURLE_OBSOLETE20              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_QUOTE_ERROR             \".\n             03 FILLER PIC X(30) VALUE \"CURLE_HTTP_RETURNED_ERROR     \".\n             03 FILLER PIC X(30) VALUE \"CURLE_WRITE_ERROR             \".\n             03 FILLER PIC X(30) VALUE \"CURLE_OBSOLETE24              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_UPLOAD_FAILED           \".\n             03 FILLER PIC X(30) VALUE \"CURLE_READ_ERROR              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_OUT_OF_MEMORY           \".\n             03 FILLER PIC X(30) VALUE \"CURLE_OPERATION_TIMEDOUT      \".\n             03 FILLER PIC X(30) VALUE \"CURLE_OBSOLETE29              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_FTP_PORT_FAILED         \".\n             03 FILLER PIC X(30) VALUE \"CURLE_FTP_COULDNT_USE_REST    \".\n             03 FILLER PIC X(30) VALUE \"CURLE_OBSOLETE32              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_RANGE_ERROR             \".\n             03 FILLER PIC X(30) VALUE \"CURLE_HTTP_POST_ERROR         \".\n             03 FILLER PIC X(30) VALUE \"CURLE_SSL_CONNECT_ERROR       \".\n             03 FILLER PIC X(30) VALUE \"CURLE_BAD_DOWNLOAD_RESUME     \".\n             03 FILLER PIC X(30) VALUE \"CURLE_FILE_COULDNT_READ_FILE  \".\n             03 FILLER PIC X(30) VALUE \"CURLE_LDAP_CANNOT_BIND        \".\n             03 FILLER PIC X(30) VALUE \"CURLE_LDAP_SEARCH_FAILED      \".\n             03 FILLER PIC X(30) VALUE \"CURLE_OBSOLETE40              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_FUNCTION_NOT_FOUND      \".\n             03 FILLER PIC X(30) VALUE \"CURLE_ABORTED_BY_CALLBACK     \".\n             03 FILLER PIC X(30) VALUE \"CURLE_BAD_FUNCTION_ARGUMENT   \".\n             03 FILLER PIC X(30) VALUE \"CURLE_OBSOLETE44              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_INTERFACE_FAILED        \".\n             03 FILLER PIC X(30) VALUE \"CURLE_OBSOLETE46              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_TOO_MANY_REDIRECTS      \".\n             03 FILLER PIC X(30) VALUE \"CURLE_UNKNOWN_TELNET_OPTION   \".\n             03 FILLER PIC X(30) VALUE \"CURLE_TELNET_OPTION_SYNTAX    \".\n             03 FILLER PIC X(30) VALUE \"CURLE_OBSOLETE50              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_PEER_FAILED_VERIFICATION\".\n             03 FILLER PIC X(30) VALUE \"CURLE_GOT_NOTHING             \".\n             03 FILLER PIC X(30) VALUE \"CURLE_SSL_ENGINE_NOTFOUND     \".\n             03 FILLER PIC X(30) VALUE \"CURLE_SSL_ENGINE_SETFAILED    \".\n             03 FILLER PIC X(30) VALUE \"CURLE_SEND_ERROR              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_RECV_ERROR              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_OBSOLETE57              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_SSL_CERTPROBLEM         \".\n             03 FILLER PIC X(30) VALUE \"CURLE_SSL_CIPHER              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_SSL_CACERT              \".\n             03 FILLER PIC X(30) VALUE \"CURLE_BAD_CONTENT_ENCODING    \".\n             03 FILLER PIC X(30) VALUE \"CURLE_LDAP_INVALID_URL        \".\n             03 FILLER PIC X(30) VALUE \"CURLE_FILESIZE_EXCEEDED       \".\n             03 FILLER PIC X(30) VALUE \"CURLE_USE_SSL_FAILED          \".\n             03 FILLER PIC X(30) VALUE \"CURLE_SEND_FAIL_REWIND        \".\n             03 FILLER PIC X(30) VALUE \"CURLE_SSL_ENGINE_INITFAILED   \".\n             03 FILLER PIC X(30) VALUE \"CURLE_LOGIN_DENIED            \".\n             03 FILLER PIC X(30) VALUE \"CURLE_TFTP_NOTFOUND           \".\n             03 FILLER PIC X(30) VALUE \"CURLE_TFTP_PERM               \".\n             03 FILLER PIC X(30) VALUE \"CURLE_REMOTE_DISK_FULL        \".\n             03 FILLER PIC X(30) VALUE \"CURLE_TFTP_ILLEGAL            \".\n             03 FILLER PIC X(30) VALUE \"CURLE_TFTP_UNKNOWNID          \".\n             03 FILLER PIC X(30) VALUE \"CURLE_REMOTE_FILE_EXISTS      \".\n             03 FILLER PIC X(30) VALUE \"CURLE_TFTP_NOSUCHUSER         \".\n             03 FILLER PIC X(30) VALUE \"CURLE_CONV_FAILED             \".\n             03 FILLER PIC X(30) VALUE \"CURLE_CONV_REQD               \".\n             03 FILLER PIC X(30) VALUE \"CURLE_SSL_CACERT_BADFILE      \".\n             03 FILLER PIC X(30) VALUE \"CURLE_REMOTE_FILE_NOT_FOUND   \".\n             03 FILLER PIC X(30) VALUE \"CURLE_SSH                     \".\n             03 FILLER PIC X(30) VALUE \"CURLE_SSL_SHUTDOWN_FAILED     \".\n             03 FILLER PIC X(30) VALUE \"CURLE_AGAIN                   \".\n       01 FILLER REDEFINES LIBCURL_ERRORS.\n          02 CURLEMSG OCCURS 81 TIMES PIC X(30).\n\n\nOutput:\nprompt$ ./curl-rosetta summary\nRead: http://www.rosettacode.org\nLength: 000024043\n\nprompt$ ./curl-rosetta display\nRead: http://www.rosettacode.org\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\" class=\"client-nojs\">\n<head>\n...\n", "explain": "Tested with GnuCOBOL\nand a copybook\n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Visual_Basic", "code": "\nLibrary: Microsoft.WinHttp\nWorks with: Visual Basic version 5\nWorks with: Visual Basic version 6\nWorks with: VBA version Access 97\nWorks with: VBA version 6.5\nWorks with: VBA version 7.1\nSub Main()\nDim HttpReq As WinHttp.WinHttpRequest\n'  in the \"references\" dialog of the IDE, check\n'  \"Microsoft WinHTTP Services, version 5.1\" (winhttp.dll)\nConst HTTPREQUEST_PROXYSETTING_PROXY As Long = 2\n#Const USE_PROXY = 1\n  Set HttpReq = New WinHttp.WinHttpRequest\n  HttpReq.Open \"GET\", \"http://rosettacode.org/robots.txt\"\n#If USE_PROXY Then\n  HttpReq.SetProxy HTTPREQUEST_PROXYSETTING_PROXY, \"my_proxy:80\"\n#End If\n  HttpReq.SetTimeouts 1000, 1000, 1000, 1000\n  HttpReq.Send\n  Debug.Print HttpReq.ResponseText\nEnd Sub\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Ada", "code": "\nLibrary: AWS\nwith Ada.Text_IO; use Ada.Text_IO;\n\nwith AWS.Client;\nwith AWS.Response;\n\nprocedure HTTP_Request is\nbegin\n   Put_Line (AWS.Response.Message_Body (AWS.Client.Get (URL => \"http://www.rosettacode.org\")));\nend HTTP_Request;\n\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Julia", "code": "\nreadurl(url) = open(readlines, download(url))\n\nreadurl(\"http://rosettacode.org/index.html\")\n\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Kotlin", "code": "\n// version 1.1.2\n\nimport java.net.URL\nimport java.io.InputStreamReader\nimport java.util.Scanner\n\nfun main(args: Array<String>) {\n    val url = URL(\"http://www.puzzlers.org/pub/wordlists/unixdict.txt\")\n    val isr = InputStreamReader(url.openStream())\n    val sc = Scanner(isr)\n    while (sc.hasNextLine()) println(sc.nextLine())\n    sc.close()\n}\n\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Perl", "code": "\nCore example[edit]\nLibrary: HTTP/Tiny\nWorks with: Perl version 5.14\nWorks with: Perl/HTTP/Tiny\n\nuse strict; use warnings;\nrequire 5.014; # check HTTP::Tiny part of core\nuse HTTP::Tiny;\n\nprint( HTTP::Tiny->new()->get( 'http://rosettacode.org')->{content} );\n\nLibrary examples[edit]\nLibrary: LWP[edit]\nWorks with: Perl/LWP\n\nuse LWP::Simple qw/get $ua/;\n$ua->agent(undef) ; # cloudflare blocks default LWP agent\nprint( get(\"http://www.rosettacode.org\") );\n\n\nuse strict;\nuse LWP::UserAgent;\n\nmy $url = 'http://www.rosettacode.org';\nmy $response = LWP::UserAgent->new->get( $url );\n\n$response->is_success or die \"Failed to GET '$url': \", $response->status_line;\n\nprint $response->as_string\n\n", "explain": "This sample is nearly identical to the LWP sample except that it uses HTTP::Tiny which was added to the core libraries in Perl/5.14.\nClassic LWP sample.\nor with more error-checking\n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Objective-C", "code": "\n#import <Foundation/Foundation.h>\n\nint main (int argc, const char * argv[]) {\n    @autoreleasepool {\n\n        NSError        *error;\n        NSURLResponse *response;\n        NSData *data = [NSURLConnection sendSynchronousRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:@\"http://rosettacode.org\"]]\n                                                returningResponse:&response\n                                                            error:&error];\n\n        NSLog(@\"%@\", [[NSString alloc] initWithData:data\n                                              encoding:NSUTF8StringEncoding]);\n\n    }\n    return 0;\n}\n\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Prolog", "code": "\n\n:- use_module(library( http/http_open )).\n\nhttp :-\n\thttp_open('http://www.rosettacode.org/',In, []),\n\tcopy_stream_data(In, user_output),\n\tclose(In).\n\n", "explain": "Works with SWI-Prolog and library http/http_open. (Extract from the doc).\n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Lua", "code": "\nLibrary: LuaSocket\nlocal http = require(\"socket.http\")\nlocal url = require(\"socket.url\")\nlocal page = http.request('http://www.google.com/m/search?q=' .. url.escape(\"lua\"))\nprint(page)\n\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Scala", "code": "\nLibrary: Scala\nimport scala.io.Source\n\nobject HttpTest extends App {\n  System.setProperty(\"http.agent\", \"*\")\n\n  Source.fromURL(\"http://www.rosettacode.org\").getLines.foreach(println)\n}\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Dart", "code": "\n\nimport 'dart:io';\nvoid main(){\n  var url = 'http://rosettacode.org';\n  var client = new HttpClient();\n  client.getUrl(Uri.parse(url))\n        .then((HttpClientRequest request)   => request.close())\n        .then((HttpClientResponse response) => response.pipe(stdout));\n}\n\n", "explain": "Using the stand-alone VM: \n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "D", "code": "\nLibrary: phobos\nvoid main() {\n  import std.stdio, std.net.curl;\n  writeln(get(\"http://google.com\"));\n}\n\nLibrary: tango\nimport tango.io.Console;\nimport tango.net.http.HttpGet;\n\nvoid main() {\n  Cout.stream.copy( (new HttpGet(\"http://google.com\")).open );\n}\n\n\nimport tango.io.Console;\nimport tango.net.InternetAddress;\nimport tango.net.device.Socket;\n\nvoid main() {\n  auto site = new Socket;\n  site.connect (new InternetAddress(\"google.com\",80)).write (\"GET / HTTP/1.0\\n\\n\");\n\n  Cout.stream.copy (site);\n}\n\n", "explain": "Or more operating directly on the socket:\n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Haskell", "code": "\nUsing Library: HTTP from HackageDB\nimport Network.Browser\nimport Network.HTTP\nimport Network.URI\n \nmain = do \n    rsp <- Network.Browser.browse $ do\n        setAllowRedirects True\n        setOutHandler $ const (return ())\n        request $ getRequest \"http://www.rosettacode.org/\"\n    putStrLn $ rspBody $ snd rsp\n\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "VBScript", "code": "\nLibrary: Microsoft.XmlHTTP\n\nOption Explicit\n\nConst sURL=\"http://rosettacode.org/\"\n\nDim oHTTP\nSet oHTTP = CreateObject(\"Microsoft.XmlHTTP\")\n\nOn Error Resume Next\noHTTP.Open \"GET\", sURL, False\noHTTP.Send \"\"\nIf Err.Number = 0 Then\n     WScript.Echo oHTTP.responseText\nElse\n     Wscript.Echo \"error \" & Err.Number & \": \" & Err.Description\nEnd If\n\nSet oHTTP = Nothing\n", "explain": "Based on code at How to retrieve HTML web pages with VBScript via the Microsoft.XmlHttp object\n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Scheme", "code": "\nWorks with: Guile\n; Use the regular expression module to parse the url (included with Guile)\n(use-modules (ice-9 regex))\n\n; Set the url and parse the hostname, port, and path into variables\n(define url \"http://www.rosettacode.org/wiki/HTTP\")\n(define r (make-regexp \"^(http://)?([^:/]+)(:)?(([0-9])+)?(/.*)?\" regexp/icase))\n(define host (match:substring (regexp-exec r url) 2))\n(define port (match:substring (regexp-exec r url) 4))\n(define path (match:substring (regexp-exec r url) 6))\n\n; Set port to 80 if it wasn't set above and convert from a string to a number\n(if (eq? port #f) (define port \"80\"))\n(define port (string->number port))\n\n; Connect to remote host on specified port\n(let ((s (socket PF_INET SOCK_STREAM 0)))\n        (connect s AF_INET (car (hostent:addr-list (gethostbyname host))) port)\n\n; Send a HTTP request for the specified path\n        (display \"GET \" s)\n        (display path s)\n        (display \" HTTP/1.0\\r\\n\\r\\n\" s)\n\n; Display the received HTML\n        (do ((c (read-char s) (read-char s))) ((eof-object? c))\n                (display c)))\nWorks with: Chicken Scheme\n\n(use http-client)\n(print\n  (with-input-from-request \"http://google.com/\"\n                           #f read-string))\n", "explain": "Using the http-client library, this is trivial.\n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "PowerShell", "code": "\n$wc = New-Object Net.WebClient\n$wc.DownloadString('http://www.rosettacode.org')\n\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "ColdFusion", "code": "\n  <cfhttp url=\"http://www.rosettacode.org\" result=\"result\">\n  <cfoutput>#result.FileContent#</cfoutput>\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "ABAP", "code": "\n\nreport z_http.\n\ncl_http_client=>create_by_url(\n  exporting\n    url                = `http://rosettacode.org/robots.txt`\n  importing\n    client             = data(http_client)\n  exceptions\n    argument_not_found = 1\n    plugin_not_active  = 2\n    internal_error     = 3\n    others             = 4 ).\n\nif sy-subrc <> 0.\n  data(error_message) = switch string( sy-subrc\n    when 1 then `argument_not_found`\n    when 2 then `plugin_not_active`\n    when 3 then `internal_error`\n    when 4 then `other error` ).\n\n  write error_message.\n  exit.\nendif.\n\ndata(rest_http_client) = cast if_rest_client( new cl_rest_http_client( http_client ) ).\n\nrest_http_client->get( ).\n\ndata(response_string) = rest_http_client->get_response_entity( )->get_string_data( ).\n\nsplit response_string at cl_abap_char_utilities=>newline into table data(output_table).\n\nloop at output_table assigning field-symbol(<output_line>).\n  write / <output_line>.\nendloop.\n\n\nOutput:\nUser-agent: *\nAllow: /mw/images/\nAllow: /mw/skins/\nAllow: /mw/title.png\nAllow: /mw/resources/\nDisallow: /w/\nDisallow: /mw/\nDisallow: /wiki/Special:\n\n", "explain": "This works for ABAP Version 7.40 and above\n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "F#", "code": "\n\nlet wget (url : string) =\n    use c = new System.Net.WebClient()\n    c.DownloadString(url)\n\nprintfn \"%s\" (wget \"http://www.rosettacode.org/\")\n\n\nopen System.Net\nopen System.IO\n\nlet wgetAsync url =\n    async { let request = WebRequest.Create (url:string)\n            use! response = request.AsyncGetResponse()\n            use responseStream = response.GetResponseStream()\n            use reader = new StreamReader(responseStream)\n            return reader.ReadToEnd() }\n\nlet urls = [\"http://www.rosettacode.org/\"; \"http://www.yahoo.com/\"; \"http://www.google.com/\"]\nlet content = urls\n              |> List.map wgetAsync\n              |> Async.Parallel\n              |> Async.RunSynchronously\n\n", "explain": "In F# we can just use the .NET library to do this so its the same as the C# example.\nHowever unlike C#, F# can use an asynchronous workflow to avoid blocking any threads while waiting for a response from the server. To asynchronously download three url's at once...\n"}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "Groovy", "code": "\nnew URL(\"http://www.rosettacode.org\").eachLine { println it }\n\n", "explain": ""}, {"task_name": "HTTP", "task_url": "https://rosettacode.org/wiki/HTTP", "task_cat": "Programming environment operations", "lang": "AWK", "code": "\nWorks with: gawk\nBEGIN {\n  site=\"en.wikipedia.org\"\n  path=\"/wiki/\"\n  name=\"Rosetta_Code\"\n\n  server = \"/inet/tcp/0/\" site \"/80\"\n  print \"GET \" path name \" HTTP/1.0\" |& server\n  print \"Host: \" site |& server\n  print \"\\r\\n\\r\\n\" |& server\n\n  while ( (server |& getline fish) > 0 ) {\n    if ( ++scale == 1 )\n      ship = fish\n    else\n      ship = ship \"\\n\" fish\n  }\n  close(server)\n\n  print ship\n}\n\n", "explain": ""}]