[{"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Python", "code": "\nNot using regular expressions[edit]\nWorks with: Python version 2.6+\n>>> def stripchars(s, chars):\n...     return s.translate(None, chars)\n... \n>>> stripchars(\"She was a soul stripper. She took my heart!\", \"aei\")\n'Sh ws  soul strppr. Sh took my hrt!'\n\nWorks with: Python version 2.x\n>>> import string\n>>> def stripchars(s, chars):\n...     return s.translate(string.maketrans(\"\", \"\"), chars)\n... \n>>> stripchars(\"She was a soul stripper. She took my heart!\", \"aei\")\n'Sh ws  soul strppr. Sh took my hrt!'\n\n\n>>> def stripchars(s, chars):\n...     return \"\".join(c for c in s if c not in chars)\n... \n>>> stripchars(\"She was a soul stripper. She took my heart!\", \"aei\")\n'Sh ws  soul strppr. Sh took my hrt!'\n\nUsing regular expressions[edit]\n>>> import re\n>>> def stripchars(s, chars):\n\treturn re.sub('[%s]+' % re.escape(chars), '', s)\n\n>>> stripchars(\"She was a soul stripper. She took my heart!\", \"aei\")\n'Sh ws  soul strppr. Sh took my hrt!'\n>>>\n\n", "explain": "Implemented manually:\n"}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "C", "code": "\n#include <string.h>\n#include <stdio.h>\n#include <stdlib.h>\n\n  /* removes all chars from string */\nchar *strip_chars(const char *string, const char *chars)\n{\n  char * newstr = malloc(strlen(string) + 1);\n  int counter = 0;\n\n  for ( ; *string; string++) {\n    if (!strchr(chars, *string)) {\n      newstr[ counter ] = *string;\n      ++ counter;\n    }\n  }\n\n  newstr[counter] = 0;\n  return newstr;\n}\n\nint main(void)\n{\n  char *new = strip_chars(\"She was a soul stripper. She took my heart!\", \"aei\");\n  printf(\"%s\\n\", new);\n\n  free(new);\n  return 0;\n}\n\n\nResult:\nSh ws  soul strppr. Sh took my hrt!\nWith table lookup[edit]\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *strip(const char * str, const char *pat)\n{\n\t/*  char replacement is typically done with lookup tables if\n\t *  the replacement set can be large: it turns O(m n) into\n\t *  O(m + n).\n\t *  If same replacement pattern is going to be applied to many\n\t *  strings, it's better to build a table beforehand and reuse it.\n\t *  If charset is big like unicode, table needs to be implemented\n\t *  more efficiently, say using bit field or hash table -- it\n\t *  all depends on the application.\n\t */\n\tint i = 0, tbl[128] = {0};\n\twhile (*pat != '\\0') tbl[(int)*(pat++)] = 1;\n\n\tchar *ret = malloc(strlen(str) + 1);\n\tdo {\n\t\tif (!tbl[(int)*str])\n\t\t\tret[i++] = *str;\n\t} while (*(str++) != '\\0');\n\n\t/*  assuming realloc is efficient and succeeds; if not, we could\n\t *  do a two-pass, count first, alloc and strip second\n\t */\n\treturn realloc(ret, i);\n}\n\nint main()\n{\n\tchar * x = strip(\"She was a soul stripper. She took my heart!\", \"aei\");\n\tprintf(x);\n\tfree(x);\n\n\treturn 0;\n}\nOutput same as above.\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "C++", "code": "\nWorks with: C++11\n#include <algorithm>\n#include <iostream>\n#include <string>\n\nstd::string stripchars(std::string str, const std::string &chars)\n{\n    str.erase(\n        std::remove_if(str.begin(), str.end(), [&](char c){\n            return chars.find(c) != std::string::npos;\n        }),\n        str.end()\n    );\n    return str;\n}\n\nint main()\n{\n    std::cout << stripchars(\"She was a soul stripper. She took my heart!\", \"aei\") << '\\n';\n    return 0;\n}\n\n\nOutput:\nSh ws  soul strppr. Sh took my hrt!\n\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Java", "code": "\n\nString stripCharacters(String string, String characters) {\n    for (char character : characters.toCharArray())\n        string = string.replace(String.valueOf(character), \"\");\n    return string;\n}\n\n\nString stripCharacters(String string, String characters) {\n    StringBuilder stripped = new StringBuilder(string);\n    /* traversing the string backwards is necessary to avoid collision */\n    for (int index = string.length() - 1; index >= 0; index--) {\n        if (characters.contains(String.valueOf(string.charAt(index))))\n            stripped.deleteCharAt(index);\n    }\n    return stripped.toString();\n}\n\n\nstatic String stripCharacters(String string, String characters) {\n    /* be sure to 'quote' the 'characters' to avoid pattern collision */\n    characters = Pattern.quote(characters);\n    string = string.replaceAll(\"[%s]\".formatted(characters), \"\");\n    return string;\n}\n\n\nSh ws  soul strppr. Sh took my hrt!\n\n", "explain": "The most basic approach is to use the String.replace method.\nYou could also use a StringBuilder which provides a deleteCharAt method.\nYou could use the String.replaceAll method, which takes a regular expression as it's first argument.\nThese will all produce the following string.\n"}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "C#", "code": "\nusing System;\n\npublic static string RemoveCharactersFromString(string testString, string removeChars)\n{\n    char[] charAry = removeChars.ToCharArray();\n    string returnString = testString;\n    foreach (char c in charAry)\n    {\n        while (returnString.IndexOf(c) > -1)\n        {\n            returnString = returnString.Remove(returnString.IndexOf(c), 1);\n        }\n    }\n    return returnString;\n}\n\n\nusing System;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string testString = \"She was a soul stripper. She took my heart!\";\n        string removeChars = \"aei\";\n        Console.WriteLine(RemoveCharactersFromString(testString, removeChars));\n    }\n}\n\nOutput:\nSh ws  soul strppr. Sh took my hrt!\n\nusing System;\nusing System.Text.RegularExpressions;\n\nprivate static string RegexRemoveCharactersFromString(string testString, string removeChars)\n{\n    string pattern = \"[\" + removeChars + \"]\";\n    return Regex.Replace(testString, pattern, \"\");\n}\n\nusing System;\n\npublic static System.ReadOnlySpan<T> RemoveItems<T>(System.Span<T> toStrip, System.ReadOnlySpan<T> toRemove)\n  where T : System.IEquatable<T>\n{\n  var toIndex = toStrip.Length;\n\n  for (var fromIndex = toIndex - 1; fromIndex >= 0; fromIndex--)\n    if (toStrip[fromIndex] is var item && !toRemove.Contains(item))\n      toStrip[--toIndex] = item;\n\n  return toStrip.Slice(toIndex);\n}\n\n\nusing System;\n\nclass Program\n{\n  static void Main(string[] args)\n  {\n    var stripString = \"She was a soul stripper. She took my heart!\";\n    var removeString = \"aei\";\n    System.Console.WriteLine(RemoveItems<char>(stripString.ToCharArray(), removeString).ToString());\n  }\n}\n\n\nOutput:\nSh ws  soul strppr. Sh took my hrt!\n", "explain": "Usage:\nUsing Regex:\nAlternative version using System.Span<T>:\nUsage:\n"}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "JavaScript", "code": "\nES5[edit]\nfunction stripchars(string, chars) {\n  return string.replace(RegExp('['+chars+']','g'), '');\n}\n\nES6[edit]\n\n(() => {\n    'use strict';\n\n    // stripChars\u00a0:: String -> String -> String\n    const stripChars = (strNeedles, strHayStack) =>\n        strHayStack.replace(RegExp(`[${strNeedles}]`, 'g'), '');\n\n    // GENERIC FUNCTION\n\n    // curry\u00a0:: ((a, b) -> c) -> a -> b -> c\n    const curry = f => a => b => f(a, b);\n\n    // TEST FUNCTION\n\n    const noAEI = curry(stripChars)('aeiAEI');\n\n    // TEST\n    return noAEI('She was a soul stripper. She took my heart!');\n\n    // 'Sh ws  soul strppr. Sh took my hrt!'\n})();\n\n\nOutput:\n'Sh ws  soul strppr. Sh took my hrt!'\n\n(() => {\n    'use strict';\n\n    // stripChars\u00a0:: String -> String -> String\n    const stripChars = (strNeedles, strHayStack) =>\n        strHayStack.split('')\n        .filter(x => !elem(x, strNeedles))\n        .join('');\n\n    // GENERIC FUNCTIONS\n\n    // elem\u00a0:: Eq a => a -> [a] -> Bool\n    const elem = (x, xs) => xs.indexOf(x) !== -1;\n\n    // curry\u00a0:: ((a, b) -> c) -> a -> b -> c\n    const curry = f => a => b => f(a, b);\n\n    // TEST FUNCTION\n\n    const noAEI = curry(stripChars)('aeiAEI');\n\n    \n    // TEST\n    return noAEI('She was a soul stripper. She took my heart!');\n\n    // 'Sh ws  soul strppr. Sh took my hrt!'\n})();\n\n\nOutput:\n'Sh ws  soul strppr. Sh took my hrt!'\n", "explain": "Reversing the order of the arguments, to simplify any currying:\nAlternatively, we could also do this without a regex:\n"}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "PHP", "code": "\n<?php\nfunction stripchars($s, $chars) {\n    return str_replace(str_split($chars), \"\", $s);\n}\n\necho stripchars(\"She was a soul stripper. She took my heart!\", \"aei\"), \"\\n\";\n?>\n\n\nOutput:\nSh ws  soul strppr. Sh took my hrt!\n\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Fortran", "code": "\nelemental subroutine strip(string,set)\n  character(len=*), intent(inout) :: string\n  character(len=*), intent(in)    :: set\n  integer                         :: old, new, stride\n  old = 1; new = 1\n  do\n    stride = scan( string( old : ), set )\n    if ( stride > 0 ) then\n      string( new : new+stride-2 ) = string( old : old+stride-2 )\n      old = old+stride\n      new = new+stride-1\n    else\n      string( new : ) = string( old : )\n      return\n    end if\n  end do\nend subroutine strip\nNote: Since strip is an elemental subroutine, it can be called with arrays of strings as well.\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Go", "code": "\npackage main\n\nimport (\n    \"fmt\"\n    \"strings\"\n)\n\nfunc stripchars(str, chr string) string {\n    return strings.Map(func(r rune) rune {\n        if strings.IndexRune(chr, r) < 0 {\n            return r\n        }\n        return -1\n    }, str)\n}\n\nfunc main() {\n    fmt.Println(stripchars(\"She was a soul stripper. She took my heart!\",\n        \"aei\"))\n}\n\n\nOutput:\nSh ws  soul strppr. Sh took my hrt!\n\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Delphi", "code": "\nprogram StripCharacters;\n\n{$APPTYPE CONSOLE}\n\nuses SysUtils;\n\nfunction StripChars(const aSrc, aCharsToStrip: string): string;\nvar\n  c: Char;\nbegin\n  Result := aSrc;\n  for c in aCharsToStrip do\n    Result := StringReplace(Result, c, '', [rfReplaceAll, rfIgnoreCase]);\nend;\n\nconst\n  TEST_STRING = 'She was a soul stripper. She took my heart!';\nbegin\n  Writeln(TEST_STRING);\n  Writeln(StripChars(TEST_STRING, 'aei'));\nend.\n\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Ruby", "code": "\n\"She was a soul stripper. She took my heart!\".delete(\"aei\")  # => \"Sh ws  soul strppr. Sh took my hrt!\"\n\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Rust", "code": "\n\nfn strip_characters(original : &str, to_strip : &str) -> String {\n    let mut result = String::new();\n    for c in original.chars() {\n        if !to_strip.contains(c) {\n           result.push(c);\n       }\n    }\n    result\n}\n\n\nfn strip_characters(original : &str, to_strip : &str) -> String {\n    original.chars().filter(|&c| !to_strip.contains(c)).collect()\n}\n\n\nfn main() {\n    println!(\"{}\", strip_characters(\"She was a soul stripper. She took my heart!\", \"aei\"));\n}\n\n", "explain": "Naive Implementation:\nFunctional Implementation:\nEither can be executed thusly:\n"}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Swift", "code": "\nextension String {\n  func stripCharactersInSet(chars: [Character]) -> String {\n    return String(seq: filter(self) {find(chars, $0) == nil})\n  }\n}\n\nlet aString = \"She was a soul stripper. She took my heart!\"\nlet chars: [Character] = [\"a\", \"e\", \"i\"]\n\nprintln(aString.stripCharactersInSet(chars))\n\nOutput:\nSh ws  soul strppr. Sh took my hrt!\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "COBOL", "code": "\n\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. Strip-Chars.\n\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n       01  Str-Size  CONSTANT 128.\n\n       LOCAL-STORAGE SECTION.\n       01  I       PIC 999.\n       01  Str-Pos PIC 999.\n\n       01  Offset  PIC 999.\n       01  New-Pos PIC 999.\n\n       01  Str-End PIC 999.\n\n       LINKAGE SECTION.\n       01  Str     PIC X(Str-Size).\n       01  Chars-To-Replace PIC X(256).\n\n       PROCEDURE DIVISION USING Str BY VALUE Chars-To-Replace.\n       Main.\n           PERFORM VARYING I FROM 1 BY 1\n                   UNTIL Chars-To-Replace (I:1) = X\"00\"\n\n               MOVE ZERO TO Offset\n\n*              *> Overwrite the characters to remove by left-shifting\n*              *> following characters over them.\n               PERFORM VARYING Str-Pos FROM 1 BY 1\n                       UNTIL Str-Size < Str-Pos\n                   IF Str (Str-Pos:1) = Chars-To-Replace (I:1)\n                       ADD 1 TO Offset\n                   ELSE IF Offset NOT = ZERO\n                       COMPUTE New-Pos = Str-Pos - Offset\n                       MOVE Str (Str-Pos:1) TO Str (New-Pos:1)\n                   END-IF\n               END-PERFORM\n               \n*              *> Move spaces to characters at the end that have been\n*              *> shifted over.\n               COMPUTE Str-End = Str-Size - Offset\n               MOVE SPACES TO Str (Str-End:Offset)\n           END-PERFORM\n\n           GOBACK\n           .\n\n", "explain": "This function takes the two arguments as specified in the task. However, the result will be returned in the string that had the characters stripped from it, and the string containing the characters to strip must be null-terminated (otherwise, a table would have to be used instead).\n"}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Ada", "code": "\nwith Ada.Text_IO;\n\nprocedure Strip_Characters_From_String is\n\n   function Strip(The_String: String; The_Characters: String)\n                  return String is\n      Keep:   array (Character) of Boolean := (others => True);\n      Result: String(The_String'Range);\n      Last:   Natural := Result'First-1;\n   begin\n      for I in The_Characters'Range loop\n         Keep(The_Characters(I)) := False;\n      end loop;\n      for J in The_String'Range loop\n         if Keep(The_String(J)) then\n            Last := Last+1;\n            Result(Last) := The_String(J);\n         end if;\n      end loop;\n      return Result(Result'First .. Last);\n   end Strip;\n\n   S: String := \"She was a soul stripper. She took my heart!\";\n\nbegin -- main\n   Ada.Text_IO.Put_Line(Strip(S, \"aei\"));\nend Strip_Characters_From_String;\n\n\nOutput:\n> ./strip_characters_from_string \nSh ws  soul strppr. Sh took my hrt!\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Julia", "code": "\nWorks with: Julia version 1.0\nstripChar = (s, r) -> replace(s, Regex(\"[$r]\") => \"\")\n\n\nOutput:\n> stripChar(\"She was a soul stripper. She took my heart!\", \"aei\")\nSh ws  soul strppr. Sh took my hrt!\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "SAS", "code": "\n\n%let string=She was a soul stripper. She took my heart!;\n%let chars=aei;\n%let stripped=%sysfunc(compress(\"&string\",\"&chars\"));\n%put &stripped;\n\n\nSh ws  soul strppr. Sh took my hrt!\n\n", "explain": "This code will write the resulting string to the log:\nLog:\n"}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Kotlin", "code": "\n// version 1.0.6\n\nfun stripChars(s: String, r: String) = s.replace(Regex(\"[$r]\"), \"\")\n\nfun main(args: Array<String>) {\n    println(stripChars(\"She was a soul stripper. She took my heart!\", \"aei\"))\n}\n\n\nOutput:\nSh ws  soul strppr. Sh took my hrt!\n\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Perl", "code": "\n\nsub stripchars {\n    my ($s, $chars) = @_;\n    $s =~ s/[$chars]//g;\n    return $s;\n}\n\nprint stripchars(\"She was a soul stripper. She took my heart!\", \"aei\"), \"\\n\";\n\n\nOutput:\nSh ws  soul strppr. Sh took my hrt!\n\n\n$str =~ tr/aei//d;\n\n\nsub stripchars {\n    my ($s, $chars) = @_;\n    eval(\"\\$s =~ tr/$chars//d;\");\n    return $s;\n}\n\n", "explain": "Note: this example uses a regular expression character class. Certain characters, like hyphens and brackets, may need to be escaped.\nAnother good option for stripping characters is to use the tr/// operator. This option is very efficient when the set of characters to strip is fixed at compile time, because tr/// is specifically designed for transforming and deleting characters. Note that hyphens also have special meaning in this case.\nSince the characters used for tr/// must be fixed at compile time, unfortunately, it requires the use of an eval to do this generally for any set of characters provided at runtime:\n"}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Objective-C", "code": "\nWorks with: Mac OS X version 10.5+\nWorks with: iOS version 1.0\n@interface NSString (StripCharacters)\n- (NSString *) stripCharactersInSet: (NSCharacterSet *) chars;\n@end\n\n@implementation NSString (StripCharacters)\n- (NSString *) stripCharactersInSet: (NSCharacterSet *) chars {\n    return [[self componentsSeparatedByCharactersInSet:chars] componentsJoinedByString:@\"\"];\n}\n@end\n\n\nTo use:\n    NSString *aString = @\"She was a soul stripper. She took my heart!\";\n    NSCharacterSet* chars = [NSCharacterSet characterSetWithCharactersInString:@\"aei\"];\n\n    // Display the NSString.\n    NSLog(@\"%@\", [aString stripCharactersInSet:chars]);\n\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Prolog", "code": "\n\n:- use_module(library(lambda)).\n\nstripchars(String, Exclude, Result) :-\n\texclude(\\X^(member(X, Exclude)), String, Result1),\n\tstring_to_list(Result, Result1).\n\n\nOutput:\n\u00a0?- stripchars(\"She was a soul stripper. She took my heart!\",\"aei\", R).\nR = \"Sh ws  soul strppr. Sh took my hrt!\".\n\nalternative version using DCG strings[edit]\n:- system:set_prolog_flag(double_quotes,chars) .\n\n%! strip_chars(SOURCEz0,SETz0,TARGETz)\n%\n% `TARGETz` is `SOURCEz0` but with any of the characters in `SETz0` removed .\n\nstrip_chars(SOURCEz0,SETz0,TARGETz)\n:-\nprolog:phrase(strip_chars(SOURCEz0,SETz0),TARGETz)\n.\n\nstrip_chars([],_SETz0_) --> ! .\n\nstrip_chars([SOURCE0|SOURCEz0],SETz0)\n-->\n{ \\+ \\+ lists:member(SOURCE0,SETz0) } ,\n! ,\nstrip_chars(SOURCEz0,SETz0)\n.\n\nstrip_chars([SOURCE0|SOURCEz0],SETz0)\n-->\n[SOURCE0] ,\nstrip_chars(SOURCEz0,SETz0)\n.\n\n\nOutput:\n?- strip_chars(\"She was a soul stripper. She took my heart!\",\"aei\",Rs) .\nRs = ['S', h, ' ', w, s, ' ', ' ', s, o, u, l, ' ', s, t, r, p, p, r, '.', ' ', 'S', h, ' ', t, o, o, k, ' ', m, y, ' ', h, r, t,\u00a0!].\n\n", "explain": "Works with SWI-Prolog and module lambda.pl written by  Ulrich Neumerkel found there http://www.complang.tuwien.ac.at/ulrich/Prolog-inedit/lambda.pl .\n"}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Lua", "code": "\nfunction stripchars(str, chrs)\n  local s = str:gsub(\"[\"..chrs:gsub(\"%W\",\"%%%1\")..\"]\", '')\n  return s\nend\n \nprint( stripchars( \"She was a soul stripper. She took my heart!\", \"aei\" ) )\n--> Sh ws  soul strppr. Sh took my hrt!\nprint( stripchars( \"She was a soul stripper. She took my heart!\", \"a-z\" ) )\n--> She ws  soul stripper. She took my hert!\n\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Scala", "code": "\ndef stripChars(s:String, ch:String)= s filterNot (ch contains _)\n\nstripChars(\"She was a soul stripper. She took my heart!\", \"aei\")\n// => Sh ws  soul strppr. Sh took my hrt!\n\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "D", "code": "\n\nimport std.stdio;\n\nstring stripchars(string s, string chars) {\n    import std.algorithm;\n    import std.conv;\n    return s.filter!(c => !chars.count(c)).to!string;\n}\n\nstring stripchars2(string s, string chars) {\n    import std.regex;\n    return replaceAll(s, regex(\"[\" ~ chars ~ \"]\"), \"\");\n}\n\nvoid main() {\n    string s = \"She was a soul stripper. She took my heart!\";\n    string chars = \"aei\";\n\n    writeln(stripchars(s, chars));\n    writeln(stripchars2(s, chars));\n}\n\n\nOutput:\nSh ws  soul strppr. Sh took my hrt!\nSh ws  soul strppr. Sh took my hrt!\n", "explain": "This example shows both the functional and regex solutions.\n"}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Haskell", "code": "\n\nstripChars :: String -> String -> String\nstripChars = filter . flip notElem\n\n\nTesting in GHCI:\n> stripChars \"aei\" \"She was a soul stripper. She took my heart!\"\n\"Sh ws  soul strppr. Sh took my hrt!\"\n", "explain": "I decided to make the string the second argument and the characters the first argument, because it is more likely for someone to partially apply the characters to be stripped (making a function that strips certain characters), than the string.\n"}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "VBScript", "code": "\nFunction stripchars(s1,s2)\n\tFor i = 1 To Len(s1)\n\t\tIf InStr(s2,Mid(s1,i,1)) Then\n\t\t\ts1 = Replace(s1,Mid(s1,i,1),\"\")\n\t\tEnd If\n\tNext\n\tstripchars = s1\nEnd Function\n\nWScript.StdOut.Write stripchars(\"She was a soul stripper. She took my heart!\",\"aei\")\n\nOutput:\nSh ws  soul strppr. Sh took my hrt!\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Scheme", "code": "\n\n(import (scheme base)\n        (scheme write)\n        (only (srfi 13) string-delete)\n        (only (srfi 14) ->char-set))\n\n;; implementation in plain Scheme\n(define (strip-chars str chars)\n  (let ((char-list (string->list chars)))\n    (define (do-strip str-list result)\n      (cond ((null? str-list)\n             (reverse result))\n            ((member (car str-list) char-list char=?)\n             (do-strip (cdr str-list) result))\n            (else\n              (do-strip (cdr str-list) (cons (car str-list) result)))))\n    (list->string\n      (do-strip (string->list str) '()))))\n\n(display (strip-chars \"She was a soul stripper. She took my heart!\" \"aei\"))\n(newline)\n\n;; using functions in SRFI 13 and SRFI 14\n(define (strip-chars2 str chars)\n  (string-delete (->char-set chars) str))\n\n(display (strip-chars2 \"She was a soul stripper. She took my heart!\" \"aei\"))\n(newline)\n\n\nOutput:\nSh ws  soul strppr. Sh took my hrt!\nSh ws  soul strppr. Sh took my hrt!\n\n", "explain": "Two approaches are given here.  The first is in plain Scheme, and implements a loop to remove the characters.\nThe second uses the SRFI libraries to create a character set and delete those characters from the string.\n"}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Logo", "code": "\nto strip :string :chars\n  output filter [not substringp\u00a0? :chars] :string\nend\n\nprint strip \"She\\ was\\ a\\ soul\\ stripper.\\ She\\ took\\ my\\ heart! \"aei\n\nbye\n\nOutput:\nSh ws  soul strppr. Sh took my hrt!\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "ColdFusion", "code": "\n<Cfset theString = 'She was a soul stripper. She took my heart!'>\n<Cfset theStrip = 'aei'>\n<Cfloop from=\"1\" to=\"#len(theStrip)#\" index=\"i\">\n  <cfset theString = replace(theString, Mid(theStrip, i, 1), '', 'all')>\n</Cfloop>\n<Cfoutput>#theString#</Cfoutput>\n\n", "explain": ""}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "F#", "code": "\nlet stripChars text (chars:string) =\n    Array.fold (\n        fun (s:string) c -> s.Replace(c.ToString(),\"\")\n    ) text (chars.ToCharArray())\n\n[<EntryPoint>]\nlet main args =\n    printfn \"%s\" (stripChars \"She was a soul stripper. She took my heart!\" \"aei\")\n    0\n\n\nSh ws  soul strppr. Sh took my hrt!\n", "explain": "Output\n"}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "Groovy", "code": "\n\ndef stripChars = { string, stripChars ->\n    def list = string as List\n    list.removeAll(stripChars as List)\n    list.join()\n}\n\n\nprintln (stripChars('She was a soul stripper. She took my heart!', 'aei'))\n\n\nOutput:\nSh ws  soul strppr. Sh took my hrt!\n", "explain": "Solution:\nTest:\n"}, {"task_name": "Strip a set of characters from a string", "task_url": "https://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string", "task_cat": "String manipulation", "lang": "AWK", "code": "\n#!/usr/bin/awk -f \nBEGIN {\n   x = \"She was a soul stripper. She took my heart!\";\n   print x;\n   gsub(/[aei]/,\"\",x);\n   print x;\n}\n\n\nOutput:\nShe was a soul stripper. She took my heart!\nSh ws  soul strppr. Sh took my hrt!\n\n", "explain": ""}]