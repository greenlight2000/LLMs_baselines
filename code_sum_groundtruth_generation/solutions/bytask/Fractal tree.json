[{"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Python", "code": "\nFile:Fractal-tree-python.png\nLibrary: pygame\nimport pygame, math\n\npygame.init()\nwindow = pygame.display.set_mode((600, 600))\npygame.display.set_caption(\"Fractal Tree\")\nscreen = pygame.display.get_surface()\n\ndef drawTree(x1, y1, angle, depth):\n    fork_angle = 20\n    base_len = 10.0\n    if depth > 0:\n        x2 = x1 + int(math.cos(math.radians(angle)) * depth * base_len)\n        y2 = y1 + int(math.sin(math.radians(angle)) * depth * base_len)\n        pygame.draw.line(screen, (255,255,255), (x1, y1), (x2, y2), 2)\n        drawTree(x2, y2, angle - fork_angle, depth - 1)\n        drawTree(x2, y2, angle + fork_angle, depth - 1)\n\ndef input(event):\n    if event.type == pygame.QUIT:\n        exit(0)\n\ndrawTree(300, 550, -90, 9)\npygame.display.flip()\nwhile True:\n    input(pygame.event.wait())\n\n", "explain": ""}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "C", "code": "\nLibrary: SDL\nLibrary: SGE or Library: cairo\n#include <SDL/SDL.h>\n#ifdef WITH_CAIRO\n#include <cairo.h>\n#else\n#include <SDL/sge.h>\n#endif\n#include <cairo.h>\n#include <stdlib.h>\n#include <time.h>\n#include <math.h>\n\n#ifdef WITH_CAIRO\n#define PI 3.1415926535\n#endif\n \n#define SIZE           800   // determines size of window\n#define SCALE          5     // determines how quickly branches shrink (higher value means faster shrinking)\n#define BRANCHES       14    // number of branches\n#define ROTATION_SCALE 0.75  // determines how slowly the angle between branches shrinks (higher value means slower shrinking)\n#define INITIAL_LENGTH 50    // length of first branch\n \ndouble rand_fl(){\n  return (double)rand() / (double)RAND_MAX;\n}\n \nvoid draw_tree(SDL_Surface * surface, double offsetx, double offsety,\n               double directionx, double directiony, double size,\n               double rotation, int depth) {\n#ifdef WITH_CAIRO\n  cairo_surface_t *surf = cairo_image_surface_create_for_data( surface->pixels,\n                                                               CAIRO_FORMAT_RGB24,\n\t\t\t\t\t\t\t       surface->w, surface->h,\n\t\t\t\t\t\t\t       surface->pitch );\n  cairo_t *ct = cairo_create(surf);\n\n  cairo_set_line_width(ct, 1);\n  cairo_set_source_rgba(ct, 0,0,0,1);\n  cairo_move_to(ct, (int)offsetx, (int)offsety);\n  cairo_line_to(ct, (int)(offsetx + directionx * size), (int)(offsety + directiony * size));\n  cairo_stroke(ct);\n#else\n  sge_AALine(surface,\n      (int)offsetx, (int)offsety,\n      (int)(offsetx + directionx * size), (int)(offsety + directiony * size),\n      SDL_MapRGB(surface->format, 0, 0, 0));\n#endif\n  if (depth > 0){\n    // draw left branch\n    draw_tree(surface,\n        offsetx + directionx * size,\n        offsety + directiony * size,\n        directionx * cos(rotation) + directiony * sin(rotation),\n        directionx * -sin(rotation) + directiony * cos(rotation),\n        size * rand_fl() / SCALE + size * (SCALE - 1) / SCALE,\n        rotation * ROTATION_SCALE,\n        depth - 1);\n \n    // draw right branch\n    draw_tree(surface,\n        offsetx + directionx * size,\n        offsety + directiony * size,\n        directionx * cos(-rotation) + directiony * sin(-rotation),\n        directionx * -sin(-rotation) + directiony * cos(-rotation),\n        size * rand_fl() / SCALE + size * (SCALE - 1) / SCALE,\n        rotation * ROTATION_SCALE,\n        depth - 1);\n  }\n}\n \nvoid render(SDL_Surface * surface){\n  SDL_FillRect(surface, NULL, SDL_MapRGB(surface->format, 255, 255, 255));\n  draw_tree(surface,\n      surface->w / 2.0,\n      surface->h - 10.0,\n      0.0, -1.0,\n      INITIAL_LENGTH,\n      PI / 8,\n      BRANCHES);\n  SDL_UpdateRect(surface, 0, 0, 0, 0);\n}\n \nint main(){\n  SDL_Surface * screen;\n  SDL_Event evt;\n \n  SDL_Init(SDL_INIT_VIDEO);\n \n  srand((unsigned)time(NULL));\n \n  screen = SDL_SetVideoMode(SIZE, SIZE, 32, SDL_HWSURFACE);\n \n  render(screen);\n  while(1){\n    if (SDL_PollEvent(&evt)){\n      if(evt.type == SDL_QUIT) break;\n    }\n    SDL_Delay(1);\n  }\n  SDL_Quit();\n  return 0;\n}\n\n", "explain": ""}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "C++", "code": "\n\n#include <windows.h>\n#include <string>\n#include <math.h>\n\n//--------------------------------------------------------------------------------------------------\nusing namespace std;\n\n//--------------------------------------------------------------------------------------------------\nconst float PI = 3.1415926536f;\n\n//--------------------------------------------------------------------------------------------------\nclass myBitmap\n{\npublic:\n    myBitmap() : pen( NULL ) {}\n    ~myBitmap()\n    {\n\tDeleteObject( pen );\n\tDeleteDC( hdc );\n\tDeleteObject( bmp );\n    }\n\n    bool create( int w, int h )\n    {\n\tBITMAPINFO\tbi;\n\tvoid\t\t*pBits;\n\tZeroMemory( &bi, sizeof( bi ) );\n\tbi.bmiHeader.biSize\t   = sizeof( bi.bmiHeader );\n\tbi.bmiHeader.biBitCount\t   = sizeof( DWORD ) * 8;\n\tbi.bmiHeader.biCompression = BI_RGB;\n\tbi.bmiHeader.biPlanes\t   = 1;\n\tbi.bmiHeader.biWidth\t   =  w;\n\tbi.bmiHeader.biHeight\t   = -h;\n\n\tHDC dc = GetDC( GetConsoleWindow() );\n\tbmp = CreateDIBSection( dc, &bi, DIB_RGB_COLORS, &pBits, NULL, 0 );\n\tif( !bmp ) return false;\n\n\thdc = CreateCompatibleDC( dc );\n\tSelectObject( hdc, bmp );\n\tReleaseDC( GetConsoleWindow(), dc ); \n\n\twidth = w; height = h;\n\n\treturn true;\n    }\n\n    void setPenColor( DWORD clr )\n    {\n\tif( pen ) DeleteObject( pen );\n\tpen = CreatePen( PS_SOLID, 1, clr );\n\tSelectObject( hdc, pen );\n    }\n\n    void saveBitmap( string path )\n    {\n\tBITMAPFILEHEADER\tfileheader;\n\tBITMAPINFO\t\t\tinfoheader;\n\tBITMAP\t\t\t\tbitmap;\n\tDWORD*\t\t\t\tdwpBits;\n\tDWORD\t\t\t\twb;\n\tHANDLE\t\t\t\tfile;\n\n\tGetObject( bmp, sizeof( bitmap ), &bitmap );\n\n\tdwpBits = new DWORD[bitmap.bmWidth * bitmap.bmHeight];\n\tZeroMemory( dwpBits, bitmap.bmWidth * bitmap.bmHeight * sizeof( DWORD ) );\n\tZeroMemory( &infoheader, sizeof( BITMAPINFO ) );\n\tZeroMemory( &fileheader, sizeof( BITMAPFILEHEADER ) );\n\n\tinfoheader.bmiHeader.biBitCount = sizeof( DWORD ) * 8;\n\tinfoheader.bmiHeader.biCompression = BI_RGB;\n\tinfoheader.bmiHeader.biPlanes = 1;\n\tinfoheader.bmiHeader.biSize = sizeof( infoheader.bmiHeader );\n\tinfoheader.bmiHeader.biHeight = bitmap.bmHeight;\n\tinfoheader.bmiHeader.biWidth = bitmap.bmWidth;\n\tinfoheader.bmiHeader.biSizeImage = bitmap.bmWidth * bitmap.bmHeight * sizeof( DWORD );\n\n\tfileheader.bfType    = 0x4D42;\n\tfileheader.bfOffBits = sizeof( infoheader.bmiHeader ) + sizeof( BITMAPFILEHEADER );\n\tfileheader.bfSize    = fileheader.bfOffBits + infoheader.bmiHeader.biSizeImage;\n\n\tGetDIBits( hdc, bmp, 0, height, ( LPVOID )dwpBits, &infoheader, DIB_RGB_COLORS );\n\n\tfile = CreateFile( path.c_str(), GENERIC_WRITE, 0, NULL, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL );\n\tWriteFile( file, &fileheader, sizeof( BITMAPFILEHEADER ), &wb, NULL );\n\tWriteFile( file, &infoheader.bmiHeader, sizeof( infoheader.bmiHeader ), &wb, NULL );\n\tWriteFile( file, dwpBits, bitmap.bmWidth * bitmap.bmHeight * 4, &wb, NULL );\n\tCloseHandle( file );\n\n\tdelete [] dwpBits;\n    }\n\n    HDC getDC()     { return hdc; }\n    int getWidth()  { return width; }\n    int getHeight() { return height; }\n\nprivate:\n    HBITMAP bmp;\n    HDC\t    hdc;\n    HPEN    pen;\n    int     width, height;\n};\n//--------------------------------------------------------------------------------------------------\nclass vector2\n{\npublic:\n    vector2() { x = y = 0; }\n    vector2( int a, int b ) { x = a; y = b; }\n    void set( int a, int b ) { x = a; y = b; }\n    void rotate( float angle_r )\n    {\n\tfloat _x = static_cast<float>( x ),\n\t      _y = static_cast<float>( y ),\n\t       s = sinf( angle_r ), \n\t       c = cosf( angle_r ),\n\t       a = _x * c - _y * s, \n\t       b = _x * s + _y * c;\n\n\tx = static_cast<int>( a ); \n\ty = static_cast<int>( b );\n    }\n\n    int x, y;\n};\n//--------------------------------------------------------------------------------------------------\nclass fractalTree\n{\npublic:\n    fractalTree()\t\t      { _ang = DegToRadian( 24.0f ); }\n    float DegToRadian( float degree ) { return degree * ( PI / 180.0f ); }\n\n    void create( myBitmap* bmp )\n    {\n\t_bmp = bmp;\n\tfloat line_len = 130.0f;\n\n\tvector2 sp( _bmp->getWidth() / 2, _bmp->getHeight() - 1 );\n\tMoveToEx( _bmp->getDC(), sp.x, sp.y, NULL );\n\tsp.y -= static_cast<int>( line_len );\n\tLineTo( _bmp->getDC(), sp.x, sp.y);\n\n\tdrawRL( &sp, line_len, 0, true );\n\tdrawRL( &sp, line_len, 0, false );\n    }\n\nprivate:\n    void drawRL( vector2* sp, float line_len, float a, bool rg )\n    {\n\tline_len *= .75f;\n\tif( line_len < 2.0f ) return;\n\n\tMoveToEx( _bmp->getDC(), sp->x, sp->y, NULL );\n\tvector2 r( 0, static_cast<int>( line_len ) );\n\n        if( rg ) a -= _ang;\n        else a += _ang; \n\n\tr.rotate( a );\n\tr.x += sp->x; r.y = sp->y - r.y;\n\n\tLineTo( _bmp->getDC(), r.x, r.y );\n\n\tdrawRL( &r, line_len, a, true );\n\tdrawRL( &r, line_len, a, false );\n    }\n\n    myBitmap* _bmp;\n    float     _ang;\n};\n//--------------------------------------------------------------------------------------------------\nint main( int argc, char* argv[] )\n{\n    ShowWindow( GetConsoleWindow(), SW_MAXIMIZE );\n\n    myBitmap bmp;\n    bmp.create( 640, 512 );\n    bmp.setPenColor( RGB( 255, 255, 0 ) );\n\n    fractalTree tree;\n    tree.create( &bmp );\n\t\n    BitBlt( GetDC( GetConsoleWindow() ), 0, 20, 648, 512, bmp.getDC(), 0, 0, SRCCOPY );\n\n    bmp.saveBitmap( \"f://rc//fracTree.bmp\" );\n\t\n    system( \"pause\" );\n\t\n    return 0;\n}\n//--------------------------------------------------------------------------------------------------\n\n", "explain": "\n"}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Java", "code": "\nLibrary: Swing Library: AWT\nimport java.awt.Color;\nimport java.awt.Graphics;\nimport javax.swing.JFrame;\n\npublic class FractalTree extends JFrame {\n\n    public FractalTree() {\n        super(\"Fractal Tree\");\n        setBounds(100, 100, 800, 600);\n        setResizable(false);\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n    }\n\n    private void drawTree(Graphics g, int x1, int y1, double angle, int depth) {\n        if (depth == 0) return;\n        int x2 = x1 + (int) (Math.cos(Math.toRadians(angle)) * depth * 10.0);\n        int y2 = y1 + (int) (Math.sin(Math.toRadians(angle)) * depth * 10.0);\n        g.drawLine(x1, y1, x2, y2);\n        drawTree(g, x2, y2, angle - 20, depth - 1);\n        drawTree(g, x2, y2, angle + 20, depth - 1);\n    }\n\n    @Override\n    public void paint(Graphics g) {\n        g.setColor(Color.BLACK);\n        drawTree(g, 400, 500, -90, 9);\n    }\n\n    public static void main(String[] args) {\n        new FractalTree().setVisible(true);\n    }\n}\n\n", "explain": ""}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "JavaScript", "code": "\n\n<html>\n<body>\n<canvas id=\"canvas\" width=\"600\" height=\"500\"></canvas>\n\n<script type=\"text/javascript\">\nvar elem = document.getElementById('canvas');\nvar context = elem.getContext('2d');\n\ncontext.fillStyle = '#C0C0C0';\ncontext.lineWidth = 1;\n\nvar deg_to_rad = Math.PI / 180.0;\nvar depth = 9;\n\nfunction drawLine(x1, y1, x2, y2, brightness){\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n}\n\nfunction drawTree(x1, y1, angle, depth){\n  if (depth !== 0){\n    var x2 = x1 + (Math.cos(angle * deg_to_rad) * depth * 10.0);\n    var y2 = y1 + (Math.sin(angle * deg_to_rad) * depth * 10.0);\n    drawLine(x1, y1, x2, y2, depth);\n    drawTree(x2, y2, angle - 20, depth - 1);\n    drawTree(x2, y2, angle + 20, depth - 1);\n  }\n}\n\ncontext.beginPath();\ndrawTree(300, 500, -90, depth);\ncontext.closePath();\ncontext.stroke();\n</script>\n\n</body>\n</html>\n\n", "explain": "Implementation using HTML5 canvas element to draw tree structure.\n"}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "PHP", "code": "\n\n<?php\nheader(\"Content-type: image/png\");\n\n$width = 512;\n$height = 512;\n$img = imagecreatetruecolor($width,$height);\n$bg = imagecolorallocate($img,255,255,255);\nimagefilledrectangle($img, 0, 0, $width, $width, $bg);\n\n$depth = 8;\nfunction drawTree($x1, $y1, $angle, $depth){\n    \n    global $img;\n    \n    if ($depth != 0){\n        $x2 = $x1 + (int)(cos(deg2rad($angle)) * $depth * 10.0);\n        $y2 = $y1 + (int)(sin(deg2rad($angle)) * $depth * 10.0);\n        \n        imageline($img, $x1, $y1, $x2, $y2, imagecolorallocate($img,0,0,0));\n        \n        drawTree($x2, $y2, $angle - 20, $depth - 1);\n        drawTree($x2, $y2, $angle + 20, $depth - 1);\n    }\n}\n\ndrawTree($width/2, $height, -90, $depth);\n\nimagepng($img);\nimagedestroy($img);\n?>\n\n", "explain": "Image is created with GD module. Code adapted from the JavaScript version.\n"}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Go", "code": "\npng converted from output ppm\npackage main\n\n// Files required to build supporting package raster are found in:\n// * Bitmap\n// * Grayscale image\n// * Xiaolin Wu's line algorithm\n// * Write a PPM file\n\nimport (\n    \"math\"\n    \"raster\"\n)\n\nconst (\n    width  = 400\n    height = 300\n    depth  = 8\n    angle  = 12\n    length = 50\n    frac   = .8\n)\n\nfunc main() {\n    g := raster.NewGrmap(width, height)\n    ftree(g, width/2, height*9/10, length, 0, depth)\n    g.Bitmap().WritePpmFile(\"ftree.ppm\")\n}\n\nfunc ftree(g *raster.Grmap, x, y, distance, direction float64, depth int) {\n    x2 := x + distance*math.Sin(direction*math.Pi/180)\n    y2 := y - distance*math.Cos(direction*math.Pi/180)\n    g.AaLine(x, y, x2, y2)\n    if depth > 0 {\n        ftree(g, x2, y2, distance*frac, direction-angle, depth-1)\n        ftree(g, x2, y2, distance*frac, direction+angle, depth-1)\n    }\n}\n\n", "explain": ""}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Delphi", "code": "\nWorks with: Delphi version 6.0\nLibrary: SysUtils,StdCtrls\n\nprocedure DrawTree(Image: TImage; X1, Y1: integer; Angle: double; Depth: integer);\nvar X2,Y2: integer;\nbegin\nif Depth = 0 then exit;\nX2:=trunc(X1 + cos(DegToRad(Angle)) * Depth * 5);\nY2:=trunc(Y1 + sin(DegToRad(Angle)) * Depth * 5);\nImage.Canvas.Pen.Color:=ColorMap47[MulDiv(High(ColorMap47),Depth,11)];\nImage.Canvas.Pen.Width:=MulDiv(Depth,5,10);\nImage.Canvas.MoveTo(X1,Y1);\nImage.Canvas.LineTo(X2,Y2);\nDrawTree(Image, X2, Y2, Angle - 10, Depth - 1);\nDrawTree(Image, X2, Y2, Angle + 35, Depth - 1);\nend;\n\n\nprocedure ShowFactalTree(Image: TImage);\nbegin\nClearImage(Image,clBlack);\nDrawTree(Image, 250, 350, -90, 11);\nImage.Invalidate;\nend;\n\n\nOutput:\n\n\nElapsed Time: 31.913 ms.\n\n\n", "explain": ""}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Ruby", "code": "\nLibrary: Shoes\nShoes.app(:title => \"Fractal Tree\", :width => 600, :height => 600) do\n  background \"#fff\"\n  stroke \"#000\"\n  @deg_to_rad = Math::PI / 180.0\n  \n  def drawTree(x1, y1, angle, depth)\n    if depth != 0\n      x2 = x1 + (Math.cos(angle * @deg_to_rad) * depth * 10.0).to_i\n      y2 = y1 + (Math.sin(angle * @deg_to_rad) * depth * 10.0).to_i\n      \n      line x1, y1, x2, y2\n      \n      drawTree(x2, y2, angle - 20, depth - 1)\n      drawTree(x2, y2, angle + 20, depth - 1)      \n    end\n  end\n  \n  drawTree(300,550,-90,9)\nend\n\n", "explain": ""}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Rust", "code": "\nLibrary: Piston\n//Cargo deps\u00a0:\n//  piston = \"0.35.0\"\n//  piston2d-graphics = \"0.23.0\"\n//  piston2d-opengl_graphics = \"0.49.0\"\n//  pistoncore-glutin_window = \"0.42.0\"\n\nextern crate piston;\nextern crate graphics;\nextern crate opengl_graphics;\nextern crate glutin_window;\n\nuse piston::window::WindowSettings;\nuse piston::event_loop::{Events, EventSettings};\nuse piston::input::RenderEvent;\nuse glutin_window::GlutinWindow as Window;\nuse opengl_graphics::{GlGraphics, OpenGL};\nuse graphics::{clear, line, Context};\n\nconst ANG: f64 = 20.0;\nconst COLOR: [f32; 4] = [1.0, 0.0, 0.5, 1.0];\nconst LINE_THICKNESS: f64 = 5.0;\nconst DEPTH: u32 = 11;\n\nfn main() {\n    let mut window: Window = WindowSettings::new(\"Fractal Tree\", [1024, 768])\n        .opengl(OpenGL::V3_2)\n        .exit_on_esc(true)\n        .build()\n        .unwrap();\n    let mut gl = GlGraphics::new(OpenGL::V3_2);\n\n    let mut events = Events::new(EventSettings::new());\n    while let Some(e) = events.next(&mut window) {\n        if let Some(args) = e.render_args() {\n            gl.draw(args.viewport(), |c, g| {\n                clear([1.0, 1.0, 1.0, 1.0], g);\n                draw_fractal_tree(512.0, 700.0, 0.0, DEPTH, c, g);\n            });\n        }\n    }\n}\n\nfn draw_fractal_tree(x1: f64, y1: f64, angle: f64, depth: u32, c: Context, g: &mut GlGraphics) {\n    let x2 = x1 + angle.to_radians().sin() * depth as f64 * 10.0;\n    let y2 = y1 - angle.to_radians().cos() * depth as f64 * 10.0;\n    line(\n        COLOR,\n        LINE_THICKNESS * depth as f64 * 0.2,\n        [x1, y1, x2, y2],\n        c.transform,\n        g,\n    );\n    if depth > 0 {\n        draw_fractal_tree(x2, y2, angle - ANG, depth - 1, c, g);\n        draw_fractal_tree(x2, y2, angle + ANG, depth - 1, c, g);\n    }\n}\n\n", "explain": ""}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Swift", "code": "\n\nextension CGFloat {\n  func degrees_to_radians() -> CGFloat {\n    return CGFloat(M_PI) * self / 180.0\n  }\n}\n\nextension Double {\n  func degrees_to_radians() -> Double {\n    return Double(M_PI) * self / 180.0\n  }\n}\n\n\nclass Tree: UIView {\n  \n  \n  func drawTree(x1: CGFloat, y1: CGFloat, angle: CGFloat, depth:Int){\n    if depth == 0 {\n      return\n    }\n    let ang = angle.degrees_to_radians()\n    let x2:CGFloat = x1 + ( cos(ang) as CGFloat) * CGFloat(depth) * (self.frame.width / 60)\n    let y2:CGFloat = y1 + ( sin(ang) as CGFloat) * CGFloat(depth) * (self.frame.width / 60)\n    \n    let line = drawLine(x1, y1: y1, x2: x2, y2: y2)\n  \n    line.stroke()\n    drawTree(x2, y1: y2, angle: angle - 20, depth: depth - 1)\n    drawTree(x2, y1: y2, angle: angle + 20, depth: depth - 1)\n  }\n  \n  func drawLine(x1:CGFloat, y1:CGFloat, x2:CGFloat, y2:CGFloat) -> UIBezierPath\n  {\n    \n    let path = UIBezierPath()\n    path.moveToPoint(CGPoint(x: x1,y: y1))\n    path.addLineToPoint(CGPoint(x: x2,y: y2))\n    path.lineWidth = 1\n    return path\n  }\n  \n  override func drawRect(rect: CGRect) {\n    \n    let color = UIColor(red: 1.0, green: 0.0, blue: 0.0, alpha: 1.0)\n    color.set()\n    drawTree(self.frame.width / 2 , y1: self.frame.height * 0.8, angle: -90 , depth: 9 )\n  }\n}\n\n\nlet tree = Tree(frame: CGRectMake(0, 0, 300, 300))\ntree\n\n", "explain": "Image - Link, since uploads seem to be disabled currently.\nIn a playground:\n"}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "R", "code": "\nTranslation of: PARI/GP\nWorks with: R version 3.3.3 and above\nFile:FRTR9.pngOutput FRTR9.png\nFile:FRTR12.pngOutput FRTR12.png\nFile:FRTR15.pngOutput FRTR15.png\n## Recursive FT plotting\nplotftree <- function(x, y, a, d, c) {\nx2=y2=0; d2r=pi/180.0; a1 <- a*d2r; d1=0;\nif(d<=0) {return()}\nif(d>0)\n  { d1=d*10.0;\n    x2=x+cos(a1)*d1;\n    y2=y+sin(a1)*d1;\n    segments(x*c, y*c, x2*c, y2*c, col='darkgreen');\n    plotftree(x2,y2,a-20,d-1,c);\n    plotftree(x2,y2,a+20,d-1,c);\n    #return(2);\n  }\n}\n## Plotting Fractal Tree. aev 3/27/17\n## ord - order/depth, c - scale, xsh - x-shift, fn - file name,\n##  ttl - plot title.\npFractalTree <- function(ord, c=1, xsh=0, fn=\"\", ttl=\"\") {\n  cat(\" *** START FRT:\", date(), \"\\n\");\n  m=640;\n  if(fn==\"\") {pf=paste0(\"FRTR\", ord, \".png\")} else {pf=paste0(fn, \".png\")};\n  if(ttl==\"\") {ttl=paste0(\"Fractal tree, order - \", ord)};\n  cat(\" *** Plot file -\", pf, \"title:\", ttl, \"\\n\");\n  ##plot(NA, xlim=c(0,m), ylim=c(-m,0), xlab=\"\", ylab=\"\", main=ttl);\n  plot(NA, xlim=c(0,m), ylim=c(0,m), xlab=\"\", ylab=\"\", main=ttl);\n  plotftree(m/2+xsh,100,90,ord,c);\n  dev.copy(png, filename=pf, width=m, height=m);\n  dev.off(); graphics.off();\n  cat(\" *** END FRT:\",date(),\"\\n\");\n}\n## Executing:\npFractalTree(9);\npFractalTree(12,0.6,210);\npFractalTree(15,0.35,600);\n\n\nOutput:\n> pFractalTree(9);\n *** START FRT: Tue Mar 28 16:49:49 2017 \n *** Plot file - FRTR9.png title: Fractal tree, order - 9 \n *** END FRT: Tue Mar 28 16:49:50 2017 \n> pFractalTree(12,0.6,210);\n *** START FRT: Tue Mar 28 17:32:15 2017 \n *** Plot file - FRTR12.png title: Fractal tree, order - 12 \n *** END FRT: Tue Mar 28 17:32:16 2017 \n> pFractalTree(15,0.35,600);\n *** START FRT: Tue Mar 28 17:38:34 2017 \n *** Plot file - FRTR15.png title: Fractal tree, order - 15 \n *** END FRT: Tue Mar 28 17:38:41 2017 \n \n", "explain": ""}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Ada", "code": "\nLibrary: SDLAda\nwith Ada.Numerics.Elementary_Functions;\n\nwith SDL.Video.Windows.Makers;\nwith SDL.Video.Renderers.Makers;\nwith SDL.Video.Rectangles;\nwith SDL.Events.Events;\n\nprocedure Fractal_Tree is\n\n   Width   : constant := 600;\n   Height  : constant := 600;\n   Level   : constant := 13;\n   Length  : constant := 130.0;\n   X_Start : constant := 475.0;\n   Y_Start : constant := 580.0;\n   A_Start : constant := -1.54;\n   Angle_1 : constant := 0.10;\n   Angle_2 : constant := 0.35;\n   C_1     : constant := 0.71;\n   C_2     : constant := 0.87;\n\n   Window   : SDL.Video.Windows.Window;\n   Renderer : SDL.Video.Renderers.Renderer;\n   Event    : SDL.Events.Events.Events;\n\n   procedure Draw_Tree (Level  : in Natural;\n                        Length : in Float;\n                        Angle  : in Float;\n                        X, Y   : in Float)\n   is\n      use SDL;\n      use Ada.Numerics.Elementary_Functions;\n      Pi   : constant       := Ada.Numerics.Pi;\n      X_2  : constant Float := X + Length * Cos (Angle, 2.0 * Pi);\n      Y_2  : constant Float := Y + Length * Sin (Angle, 2.0 * Pi);\n      Line : constant SDL.Video.Rectangles.Line_Segment\n        := ((C.int (X), C.int (Y)), (C.int (X_2), C.int (Y_2)));\n   begin\n      if Level > 0 then\n         Renderer.Set_Draw_Colour (Colour => (0, 220, 0, 255));\n         Renderer.Draw (Line => Line);\n\n         Draw_Tree (Level - 1, C_1 * Length, Angle + Angle_1, X_2, Y_2);\n         Draw_Tree (Level - 1, C_2 * Length, Angle - Angle_2, X_2, Y_2);\n      end if;\n   end Draw_Tree;\n\n   procedure Wait is\n      use type SDL.Events.Event_Types;\n   begin\n      loop\n         while SDL.Events.Events.Poll (Event) loop\n            if Event.Common.Event_Type = SDL.Events.Quit then\n               return;\n            end if;\n         end loop;\n         delay 0.100;\n      end loop;\n   end Wait;\n\nbegin\n   if not SDL.Initialise (Flags => SDL.Enable_Screen) then\n      return;\n   end if;\n\n   SDL.Video.Windows.Makers.Create (Win      => Window,\n                                    Title    => \"Fractal tree\",\n                                    Position => SDL.Natural_Coordinates'(X => 10, Y => 10),\n                                    Size     => SDL.Positive_Sizes'(Width, Height),\n                                    Flags    => 0);\n   SDL.Video.Renderers.Makers.Create (Renderer, Window.Get_Surface);\n   Renderer.Set_Draw_Colour ((0, 0, 0, 255));\n   Renderer.Fill (Rectangle => (0, 0, Width, Height));\n\n   Draw_Tree (Level, Length, A_Start, X_Start, Y_Start);\n   Window.Update_Surface;\n\n   Wait;\n   Window.Finalize;\n   SDL.Finalise;\nend Fractal_Tree;\n\n", "explain": ""}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Julia", "code": "\nTranslation of: F#\nconst width = height = 1000.0\nconst trunklength = 400.0\nconst scalefactor = 0.6\nconst startingangle = 1.5 * pi\nconst deltaangle = 0.2 * pi\n\nfunction tree(fh, x, y, len, theta)\n   if len >= 1.0\n       x2 = x + len * cos(theta)\n       y2 = y + len * sin(theta)\n       write(fh, \"<line x1='$x' y1='$y' x2='$x2' y2='$y2' style='stroke:rgb(0,0,0);stroke-width:1'/>\\n\")\n       tree(fh, x2, y2, len * scalefactor, theta + deltaangle)\n       tree(fh, x2, y2, len * scalefactor, theta - deltaangle)\n    end\nend\n\noutsvg = open(\"tree.svg\", \"w\")\nwrite(outsvg, \n    \"\"\"<?xml version='1.0' encoding='utf-8' standalone='no'?>\n    <!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\n    'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'>\n    <svg width='100%%' height='100%%' version='1.1'\n    xmlns='http://www.w3.org/2000/svg'>\\n\"\"\")\n\ntree(outsvg, 0.5 * width, height, trunklength, startingangle)\n\nwrite(outsvg, \"</svg>\\n\") # view file tree.svg in browser\n\n", "explain": ""}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Kotlin", "code": "\nTranslation of: Java\n// version 1.1.2\n\nimport java.awt.Color\nimport java.awt.Graphics\nimport javax.swing.JFrame\n\nclass FractalTree : JFrame(\"Fractal Tree\") {\n    init {\n        background = Color.black\n        setBounds(100, 100, 800, 600)\n        isResizable = false\n        defaultCloseOperation = EXIT_ON_CLOSE\n    }\n\n    private fun drawTree(g: Graphics, x1: Int, y1: Int, angle: Double, depth: Int) {\n        if (depth == 0) return\n        val x2 = x1 + (Math.cos(Math.toRadians(angle)) * depth * 10.0).toInt()\n        val y2 = y1 + (Math.sin(Math.toRadians(angle)) * depth * 10.0).toInt()\n        g.drawLine(x1, y1, x2, y2)\n        drawTree(g, x2, y2, angle - 20, depth - 1)\n        drawTree(g, x2, y2, angle + 20, depth - 1)\n    }\n\n    override fun paint(g: Graphics) {\n        g.color = Color.white\n        drawTree(g, 400, 500, -90.0, 9)\n    }\n}\n\nfun main(args: Array<String>) {\n    FractalTree().isVisible = true\n}\n\n", "explain": ""}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Perl", "code": "\n\nuse GD::Simple;\n\nmy ($width, $height) = (1000,1000); # image dimension\nmy $scale = 6/10; # branch scale relative to trunk\nmy $length = 400; # trunk size\n\nmy $img = GD::Simple->new($width,$height);\n$img->fgcolor('black');\n$img->penSize(1,1);\n\ntree($width/2, $height, $length, 270);\n\nprint $img->png;\n\n\nsub tree\n{\n        my ($x, $y, $len, $angle) = @_;\n\n        return if $len < 1;\n\n        $img->moveTo($x,$y);\n        $img->angle($angle);\n        $img->line($len);\n\n        ($x, $y) = $img->curPos();\n\n        tree($x, $y, $len*$scale, $angle+35);\n        tree($x, $y, $len*$scale, $angle-35);\n}\n\n", "explain": "using the GD::Simple module.\n"}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Prolog", "code": "\n\nfractal :-\n\tnew(D, window('Fractal')),\n\tsend(D, size, size(800, 600)),\n\tdrawTree(D, 400, 500, -90, 9),\n\tsend(D, open).\n\n\ndrawTree(_D, _X, _Y, _Angle, 0).\n\ndrawTree(D, X1, Y1, Angle, Depth) :-\n        X2 is X1 + cos(Angle * pi / 180.0) * Depth * 10.0,\n        Y2 is Y1 + sin(Angle * pi / 180.0) * Depth * 10.0,\n\tnew(Line, line(X1, Y1, X2, Y2, none)),\n\tsend(D, display, Line),\n\tA1 is Angle - 30,\n\tA2 is Angle + 30,\n\tDe is Depth - 1,\n        drawTree(D, X2, Y2, A1, De),\n        drawTree(D, X2, Y2, A2, De).\n\n", "explain": "SWI-Prolog has a graphic interface\u00a0: XPCE.\n"}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Lua", "code": "\nBitmap[edit]\n\ng, angle = love.graphics, 26 * math.pi / 180\nwid, hei = g.getWidth(), g.getHeight()\nfunction rotate( x, y, a )\n  local s, c = math.sin( a ), math.cos( a )\n  local a, b = x * c - y * s, x * s + y * c\n  return a, b\nend\nfunction branches( a, b, len, ang, dir )\n  len = len * .76\n  if len < 5 then return end\n  g.setColor( len * 16, 255 - 2 * len , 0 )\n  if dir > 0 then ang = ang - angle\n  else ang = ang + angle \n  end\n  local vx, vy = rotate( 0, len, ang )\n  vx = a + vx; vy = b - vy\n  g.line( a, b, vx, vy )\n  branches( vx, vy, len, ang, 1 )\n  branches( vx, vy, len, ang, 0 )\nend\nfunction createTree()\n  local lineLen = 127\n  local a, b = wid / 2, hei - lineLen\n  g.setColor( 160, 40 , 0 )\n  g.line( wid / 2, hei, a, b )\n  branches( a, b, lineLen, 0, 1 ) \n  branches( a, b, lineLen, 0, 0 )\nend\nfunction love.load()\n  canvas = g.newCanvas( wid, hei )\n  g.setCanvas( canvas )\n  createTree()\n  g.setCanvas()\nend\nfunction love.draw()\n  g.draw( canvas )\nend\n\nASCII[edit]\n\nfunction Bitmap:tree(x, y, angle, depth, forkfn, lengfn)\n  if depth <= 0 then return end\n  local fork, leng = forkfn(), lengfn()\n  local x2 = x + depth * leng * math.cos(angle)\n  local y2 = y - depth * leng * math.sin(angle)\n  self:line(math.floor(x), math.floor(y), math.floor(x2), math.floor(y2))\n  self:tree(x2, y2, angle+fork, depth-1, forkfn, lengfn)\n  self:tree(x2, y2, angle-fork, depth-1, forkfn, lengfn)\nend\n\nbitmap = Bitmap(128*3,128)\nbitmap:tree( 64, 120, math.pi/2, 8, function() return 0.3 end, function() return 3 end)\nbitmap:tree(192, 120, math.pi/2, 8, function() return 0.6 end, function() return 2.5 end)\nbitmap:tree(320, 120, math.pi/2, 8, function() return 0.2+math.random()*0.3 end, function() return 2.0+math.random()*2.0 end)\nbitmap:render({[0x000000]='.', [0xFFFFFFFF]='\u2588'})\n\n\nOutput:\n\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n....................................................................................................................................................................................................................................................................................................\u2588.....\u2588\u2588.\u2588.\u2588................................................................................\n.................................................\u2588.\u2588...\u2588\u2588.\u2588.\u2588.\u2588\u2588\u2588\u2588.\u2588.\u2588.\u2588\u2588...\u2588.\u2588...................................................................................................................................................................................................................\u2588\u2588.\u2588..\u2588.\u2588.\u2588\u2588.\u2588\u2588\u2588..............................................................................\n..............................................\u2588...\u2588....\u2588\u2588.\u2588\u2588\u2588..\u2588\u2588..\u2588\u2588\u2588.\u2588\u2588....\u2588...\u2588..................................................................................................................................................................................................................\u2588\u2588...\u2588...\u2588.\u2588................................................................................\n...........................................\u2588\u2588\u2588.\u2588..\u2588..\u2588\u2588\u2588\u2588\u2588.\u2588.\u2588.\u2588\u2588.\u2588.\u2588.\u2588\u2588\u2588\u2588\u2588..\u2588..\u2588.\u2588\u2588\u2588................................................................................................................................................................................................................\u2588...\u2588...\u2588\u2588.................................................................................\n.......................................\u2588.\u2588.\u2588\u2588.\u2588\u2588..\u2588.\u2588..\u2588\u2588.\u2588\u2588\u2588..\u2588\u2588..\u2588\u2588\u2588.\u2588\u2588..\u2588.\u2588..\u2588\u2588.\u2588\u2588.\u2588.\u2588.............................................................................................................................................................................................................\u2588..\u2588...\u2588\u2588.................................................................................\n....................................\u2588.\u2588.\u2588..\u2588.\u2588.\u2588..\u2588.\u2588...\u2588..\u2588...\u2588\u2588...\u2588..\u2588...\u2588.\u2588..\u2588.\u2588.\u2588..\u2588.\u2588.\u2588..........................................................................................................................................................................................................\u2588..\u2588...\u2588\u2588.................................................................................\n................................\u2588.\u2588\u2588.\u2588.\u2588\u2588..\u2588.\u2588..\u2588\u2588\u2588\u2588\u2588...\u2588\u2588\u2588\u2588\u2588..\u2588\u2588..\u2588\u2588\u2588\u2588\u2588...\u2588\u2588\u2588\u2588\u2588..\u2588.\u2588..\u2588\u2588.\u2588.\u2588\u2588.\u2588.......................................................................................................................................................................................................\u2588.\u2588...\u2588..................................................................................\n.............................\u2588...\u2588.\u2588\u2588\u2588..\u2588..\u2588.\u2588.\u2588\u2588\u2588\u2588.\u2588...\u2588\u2588\u2588\u2588.\u2588.\u2588\u2588.\u2588.\u2588\u2588\u2588\u2588...\u2588.\u2588\u2588\u2588\u2588.\u2588.\u2588..\u2588..\u2588\u2588\u2588.\u2588...\u2588...................................................................................................................................................................................\u2588..\u2588.\u2588........\u2588..\u2588\u2588\u2588...\u2588..............\u2588\u2588....\u2588......\u2588..\u2588...\u2588...............................................\n............................\u2588.\u2588..\u2588\u2588.\u2588\u2588..\u2588\u2588.\u2588.\u2588\u2588.\u2588\u2588\u2588..\u2588..\u2588\u2588\u2588\u2588..\u2588\u2588\u2588\u2588..\u2588\u2588\u2588\u2588..\u2588..\u2588\u2588\u2588.\u2588\u2588.\u2588.\u2588\u2588..\u2588\u2588.\u2588\u2588..\u2588.\u2588.................................................................................................................................................................................\u2588\u2588\u2588.\u2588\u2588.\u2588..\u2588.....\u2588\u2588.\u2588\u2588...\u2588........\u2588.....\u2588..\u2588.\u2588\u2588\u2588.....\u2588\u2588\u2588....\u2588.\u2588....\u2588........................................\n.............................\u2588\u2588..\u2588.\u2588\u2588.\u2588.\u2588\u2588.\u2588.\u2588.\u2588\u2588.\u2588...\u2588.\u2588..\u2588..\u2588\u2588\u2588\u2588..\u2588..\u2588.\u2588...\u2588.\u2588\u2588.\u2588.\u2588.\u2588\u2588.\u2588.\u2588\u2588.\u2588..\u2588\u2588....................................................................................................................................................................................\u2588.\u2588\u2588\u2588\u2588.\u2588\u2588..\u2588..\u2588..\u2588\u2588\u2588..\u2588.........\u2588....\u2588...\u2588..\u2588\u2588....\u2588\u2588\u2588..\u2588.\u2588\u2588..\u2588.\u2588.........................................\n.........................\u2588....\u2588..\u2588..\u2588.\u2588.\u2588.\u2588\u2588.\u2588.\u2588\u2588.\u2588....\u2588\u2588..\u2588...\u2588\u2588...\u2588..\u2588\u2588....\u2588.\u2588\u2588.\u2588.\u2588\u2588.\u2588.\u2588.\u2588..\u2588..\u2588....\u2588.................................................................................................................................................................................\u2588\u2588..\u2588..\u2588...\u2588\u2588\u2588..\u2588\u2588...\u2588.......\u2588\u2588\u2588....\u2588...\u2588..\u2588.\u2588...\u2588.\u2588..\u2588\u2588\u2588\u2588...\u2588...\u2588......................................\n.......................\u2588.\u2588.\u2588...\u2588\u2588\u2588...\u2588.\u2588\u2588..\u2588\u2588\u2588\u2588..\u2588\u2588....\u2588\u2588..\u2588...\u2588\u2588...\u2588..\u2588\u2588....\u2588\u2588..\u2588\u2588\u2588\u2588..\u2588\u2588.\u2588...\u2588\u2588\u2588...\u2588.\u2588.\u2588........................................................................................................................................................................\u2588\u2588.....\u2588\u2588\u2588\u2588\u2588\u2588.\u2588...\u2588.\u2588..\u2588.\u2588..\u2588.........\u2588\u2588...\u2588...\u2588..\u2588\u2588\u2588...\u2588.\u2588\u2588.\u2588\u2588\u2588....\u2588..\u2588\u2588\u2588.....................................\n......................\u2588.\u2588\u2588\u2588...\u2588\u2588\u2588\u2588\u2588..\u2588..\u2588..\u2588\u2588\u2588\u2588\u2588.\u2588.\u2588...\u2588\u2588...\u2588..\u2588\u2588..\u2588...\u2588\u2588...\u2588.\u2588.\u2588\u2588\u2588\u2588\u2588..\u2588..\u2588..\u2588\u2588\u2588\u2588\u2588...\u2588\u2588\u2588.\u2588.......................................................................................................................................................................\u2588......\u2588\u2588...\u2588\u2588\u2588...\u2588.\u2588..\u2588.\u2588..\u2588..........\u2588...\u2588...\u2588..\u2588..\u2588.\u2588.\u2588.\u2588\u2588\u2588.\u2588...\u2588\u2588..\u2588.......................................\n....................\u2588\u2588.\u2588.\u2588\u2588.....\u2588\u2588.\u2588\u2588.\u2588.\u2588..\u2588.\u2588..\u2588\u2588\u2588\u2588...\u2588\u2588...\u2588..\u2588\u2588..\u2588...\u2588\u2588...\u2588\u2588\u2588\u2588..\u2588.\u2588..\u2588.\u2588.\u2588\u2588.\u2588\u2588.....\u2588\u2588.\u2588.\u2588\u2588.....................................................................................................................................................................\u2588.......\u2588....\u2588\u2588\u2588..\u2588..\u2588\u2588..\u2588.\u2588............\u2588.\u2588....\u2588.\u2588....\u2588\u2588..\u2588\u2588\u2588\u2588.\u2588...\u2588\u2588\u2588.\u2588..........\u2588............................\n.....................\u2588\u2588\u2588..\u2588......\u2588...\u2588\u2588\u2588\u2588...\u2588\u2588....\u2588\u2588\u2588.\u2588..\u2588...\u2588.\u2588\u2588.\u2588...\u2588..\u2588.\u2588\u2588\u2588....\u2588\u2588...\u2588\u2588\u2588\u2588...\u2588......\u2588..\u2588\u2588\u2588...............................................................................................................................................................\u2588.\u2588....\u2588..\u2588....\u2588.....\u2588\u2588.\u2588...\u2588\u2588...\u2588\u2588............\u2588.\u2588....\u2588\u2588.....\u2588\u2588.\u2588\u2588\u2588\u2588\u2588.\u2588...\u2588.\u2588\u2588............\u2588.\u2588....\u2588....................\n.................\u2588..\u2588\u2588\u2588\u2588..\u2588\u2588.....\u2588.....\u2588\u2588\u2588..\u2588......\u2588\u2588.\u2588..\u2588...\u2588.\u2588\u2588.\u2588...\u2588..\u2588.\u2588\u2588......\u2588..\u2588\u2588\u2588.....\u2588.....\u2588\u2588..\u2588\u2588\u2588\u2588..\u2588............................................................................................................................................................\u2588.\u2588...\u2588.\u2588\u2588\u2588...\u2588......\u2588.\u2588...\u2588\u2588...\u2588\u2588\u2588\u2588...........\u2588\u2588....\u2588\u2588....\u2588\u2588\u2588.\u2588.\u2588\u2588.\u2588\u2588..\u2588..\u2588\u2588............\u2588\u2588....\u2588\u2588\u2588...................\n................\u2588.\u2588....\u2588\u2588\u2588\u2588.\u2588....\u2588.......\u2588\u2588.\u2588\u2588......\u2588\u2588\u2588..\u2588...\u2588\u2588..\u2588\u2588...\u2588..\u2588\u2588\u2588......\u2588\u2588.\u2588\u2588.......\u2588....\u2588.\u2588\u2588\u2588\u2588....\u2588.\u2588...................................................................................................................................................\u2588.....\u2588\u2588\u2588\u2588\u2588\u2588..\u2588....\u2588\u2588..\u2588.....\u2588\u2588\u2588...\u2588....\u2588\u2588.\u2588\u2588...........\u2588....\u2588..\u2588\u2588.\u2588\u2588\u2588\u2588..\u2588.\u2588\u2588\u2588..\u2588..\u2588\u2588.............\u2588...\u2588......................\n.................\u2588\u2588.....\u2588.\u2588\u2588\u2588.....\u2588.......\u2588\u2588\u2588\u2588.......\u2588.\u2588.\u2588....\u2588..\u2588....\u2588.\u2588.\u2588.......\u2588\u2588\u2588\u2588.......\u2588.....\u2588\u2588\u2588.\u2588.....\u2588\u2588.....................................................................................................................................................\u2588......\u2588..\u2588\u2588.\u2588\u2588\u2588....\u2588\u2588\u2588......\u2588\u2588...\u2588....\u2588\u2588..\u2588...........\u2588....\u2588....\u2588\u2588.\u2588\u2588..\u2588..\u2588\u2588.\u2588\u2588..\u2588..............\u2588..\u2588....\u2588..................\n..................\u2588......\u2588\u2588..\u2588\u2588...\u2588.......\u2588.\u2588\u2588.......\u2588..\u2588.\u2588...\u2588..\u2588...\u2588.\u2588..\u2588.......\u2588\u2588.\u2588.......\u2588...\u2588\u2588..\u2588\u2588......\u2588.......................................................................................................................................................\u2588......\u2588..\u2588\u2588\u2588..\u2588\u2588....\u2588\u2588.....\u2588.\u2588..\u2588.....\u2588..\u2588..........\u2588\u2588...\u2588......\u2588.\u2588\u2588..\u2588.\u2588\u2588\u2588\u2588\u2588.\u2588.\u2588\u2588.............\u2588.\u2588....\u2588.\u2588\u2588\u2588...............\n..............\u2588....\u2588......\u2588....\u2588\u2588..\u2588......\u2588\u2588.\u2588\u2588......\u2588...\u2588\u2588...\u2588..\u2588...\u2588\u2588...\u2588......\u2588\u2588.\u2588\u2588......\u2588..\u2588\u2588....\u2588......\u2588....\u2588................................................................................................................................................\u2588\u2588\u2588\u2588\u2588\u2588\u2588.\u2588\u2588\u2588...\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588..\u2588.\u2588..\u2588.....\u2588...\u2588......\u2588.\u2588.\u2588...\u2588......\u2588.\u2588.\u2588\u2588..\u2588.\u2588\u2588\u2588\u2588..\u2588\u2588............\u2588.\u2588.\u2588...\u2588\u2588..................\n.............\u2588\u2588\u2588....\u2588.....\u2588......\u2588.\u2588.......\u2588..\u2588......\u2588....\u2588...\u2588..\u2588...\u2588....\u2588......\u2588..\u2588.......\u2588.\u2588......\u2588.....\u2588....\u2588\u2588\u2588......................................................................................................................................................\u2588\u2588\u2588\u2588\u2588...\u2588.........\u2588...\u2588\u2588\u2588\u2588\u2588.\u2588......\u2588...\u2588....\u2588\u2588.\u2588\u2588..\u2588..\u2588.......\u2588\u2588.\u2588\u2588.\u2588\u2588.\u2588\u2588\u2588\u2588\u2588\u2588.\u2588.\u2588..........\u2588\u2588.\u2588\u2588..\u2588....................\n...........\u2588\u2588.\u2588.\u2588\u2588\u2588..\u2588....\u2588.......\u2588\u2588.......\u2588...\u2588.....\u2588.....\u2588..\u2588..\u2588..\u2588.....\u2588.....\u2588...\u2588.......\u2588\u2588.......\u2588....\u2588..\u2588\u2588\u2588.\u2588.\u2588\u2588....................................................................................................................................................\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.\u2588........\u2588......\u2588\u2588\u2588\u2588......\u2588\u2588...\u2588....\u2588\u2588.\u2588..\u2588..\u2588.......\u2588..\u2588\u2588\u2588\u2588\u2588.\u2588\u2588\u2588..\u2588.\u2588\u2588...........\u2588..\u2588..\u2588..\u2588...\u2588\u2588.............\n.............\u2588\u2588....\u2588\u2588\u2588.....\u2588.......\u2588\u2588......\u2588...\u2588.....\u2588.....\u2588..\u2588..\u2588..\u2588.....\u2588.....\u2588...\u2588......\u2588\u2588.......\u2588.....\u2588\u2588\u2588....\u2588\u2588...........................................................................................................................................................\u2588..\u2588\u2588\u2588\u2588\u2588.....\u2588........\u2588\u2588.......\u2588\u2588...\u2588....\u2588.\u2588..\u2588.\u2588........\u2588.\u2588\u2588\u2588.\u2588.\u2588\u2588.\u2588..\u2588.\u2588......\u2588....\u2588...\u2588..\u2588\u2588\u2588...\u2588...............\n..............\u2588.......\u2588\u2588...\u2588........\u2588......\u2588....\u2588....\u2588......\u2588.\u2588..\u2588.\u2588......\u2588....\u2588....\u2588......\u2588........\u2588...\u2588\u2588.......\u2588.......................................................\u2588..\u2588....\u2588..\u2588..\u2588..\u2588..\u2588..\u2588.\u2588..\u2588..\u2588..\u2588..\u2588....\u2588..\u2588...........................................\u2588.\u2588..........\u2588...\u2588..\u2588\u2588\u2588...\u2588........\u2588......\u2588\u2588\u2588\u2588\u2588\u2588\u2588.....\u2588.\u2588.\u2588.\u2588........\u2588\u2588..\u2588.\u2588\u2588.\u2588..\u2588\u2588\u2588\u2588......\u2588.....\u2588...\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.............\n.........\u2588\u2588....\u2588........\u2588\u2588..\u2588........\u2588.....\u2588.....\u2588...\u2588.......\u2588\u2588..\u2588\u2588.......\u2588...\u2588.....\u2588.....\u2588........\u2588..\u2588\u2588........\u2588....\u2588\u2588...................................................\u2588\u2588......\u2588\u2588....\u2588\u2588....\u2588\u2588.\u2588....\u2588\u2588....\u2588\u2588......\u2588\u2588.............................................\u2588\u2588...........\u2588..\u2588.....\u2588\u2588\u2588\u2588........\u2588\u2588\u2588.....\u2588....\u2588\u2588\u2588....\u2588\u2588.\u2588.\u2588........\u2588...\u2588\u2588\u2588.\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588...\u2588\u2588\u2588\u2588\u2588...\u2588...\u2588\u2588..\u2588....\u2588\u2588...............\n...........\u2588...\u2588..........\u2588.\u2588........\u2588.....\u2588......\u2588..\u2588........\u2588..\u2588........\u2588..\u2588......\u2588.....\u2588........\u2588.\u2588..........\u2588...\u2588.....................................................\u2588........\u2588....\u2588.....\u2588..\u2588.....\u2588....\u2588........\u2588..............................................\u2588............\u2588.\u2588........\u2588........\u2588..\u2588....\u2588.......\u2588\u2588...\u2588..\u2588........\u2588\u2588...\u2588\u2588\u2588\u2588\u2588....\u2588\u2588\u2588\u2588\u2588\u2588........\u2588.\u2588\u2588.\u2588.\u2588.....\u2588................\n.........\u2588\u2588\u2588\u2588\u2588\u2588.\u2588..........\u2588\u2588.........\u2588....\u2588......\u2588..\u2588........\u2588..\u2588........\u2588..\u2588......\u2588....\u2588.........\u2588\u2588..........\u2588.\u2588\u2588\u2588\u2588\u2588\u2588...................................................\u2588........\u2588....\u2588.....\u2588..\u2588.....\u2588....\u2588........\u2588.......................................\u2588.......\u2588............\u2588.\u2588........\u2588.......\u2588...\u2588...\u2588.........\u2588...\u2588.\u2588........\u2588.\u2588\u2588\u2588\u2588...\u2588....\u2588\u2588...........\u2588\u2588\u2588...\u2588\u2588.....\u2588.................\n...............\u2588\u2588\u2588..........\u2588\u2588.........\u2588...\u2588.......\u2588.\u2588........\u2588\u2588\u2588\u2588........\u2588.\u2588.......\u2588...\u2588.........\u2588\u2588..........\u2588\u2588\u2588...................................................\u2588.....\u2588.......\u2588\u2588....\u2588\u2588....\u2588..\u2588....\u2588\u2588....\u2588\u2588.......\u2588.....\u2588................................\u2588\u2588\u2588..\u2588\u2588...\u2588............\u2588\u2588.........\u2588......\u2588....\u2588..\u2588..........\u2588..\u2588.\u2588.......\u2588.\u2588\u2588.\u2588\u2588...\u2588...\u2588\u2588............\u2588.....\u2588\u2588.....\u2588....\u2588............\n.................\u2588\u2588..........\u2588..........\u2588..\u2588........\u2588\u2588........\u2588\u2588\u2588\u2588........\u2588\u2588........\u2588..\u2588..........\u2588..........\u2588\u2588......................................................\u2588....\u2588........\u2588....\u2588\u2588....\u2588..\u2588....\u2588\u2588....\u2588........\u2588....\u2588....................................\u2588\u2588..\u2588\u2588\u2588\u2588.............\u2588\u2588.........\u2588.....\u2588.....\u2588..\u2588..........\u2588\u2588.\u2588\u2588......\u2588\u2588\u2588.\u2588\u2588.\u2588...\u2588..\u2588.\u2588...........\u2588......\u2588.....\u2588....\u2588.............\n.......\u2588\u2588..........\u2588..........\u2588.........\u2588..\u2588........\u2588\u2588........\u2588\u2588\u2588\u2588........\u2588\u2588........\u2588..\u2588.........\u2588..........\u2588..........\u2588\u2588..........................................\u2588\u2588\u2588\u2588\u2588..\u2588......\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588..\u2588..\u2588..\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588......\u2588..\u2588\u2588\u2588\u2588\u2588...................................\u2588\u2588\u2588...\u2588\u2588\u2588............\u2588.........\u2588.....\u2588......\u2588.\u2588............\u2588\u2588\u2588......\u2588...\u2588\u2588.\u2588...\u2588.\u2588...\u2588.........\u2588.......\u2588....\u2588.\u2588\u2588\u2588\u2588..............\n.........\u2588..........\u2588.........\u2588..........\u2588.\u2588.........\u2588........\u2588..\u2588........\u2588.........\u2588.\u2588..........\u2588.........\u2588..........\u2588.........................................\u2588.\u2588.....\u2588\u2588\u2588........\u2588\u2588\u2588\u2588\u2588\u2588...\u2588\u2588\u2588..\u2588\u2588\u2588...\u2588\u2588\u2588\u2588\u2588\u2588........\u2588\u2588\u2588.....\u2588.\u2588...................................\u2588\u2588....\u2588\u2588...........\u2588.........\u2588.....\u2588......\u2588\u2588.............\u2588\u2588....\u2588\u2588....\u2588..\u2588...\u2588\u2588....\u2588........\u2588.......\u2588....\u2588\u2588\u2588....\u2588\u2588\u2588...........\n.......\u2588\u2588\u2588\u2588\u2588\u2588........\u2588.........\u2588..........\u2588\u2588.........\u2588........\u2588..\u2588........\u2588.........\u2588\u2588..........\u2588.........\u2588........\u2588\u2588\u2588\u2588\u2588\u2588........................................\u2588........\u2588........\u2588\u2588\u2588..\u2588.....\u2588..\u2588.....\u2588..\u2588\u2588\u2588........\u2588........\u2588......................................\u2588.....\u2588\u2588..........\u2588.........\u2588....\u2588.......\u2588.............\u2588\u2588..\u2588\u2588......\u2588..\u2588...\u2588.....\u2588.......\u2588........\u2588...\u2588.....................\n.............\u2588\u2588.......\u2588........\u2588..........\u2588\u2588..........\u2588......\u2588....\u2588......\u2588..........\u2588\u2588..........\u2588........\u2588.......\u2588\u2588..............................................\u2588.........\u2588......\u2588..\u2588...\u2588.....\u2588\u2588.....\u2588...\u2588..\u2588......\u2588.........\u2588.......................................\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.......\u2588..........\u2588...\u2588........\u2588............\u2588.\u2588\u2588.......\u2588...\u2588..\u2588......\u2588......\u2588.........\u2588..\u2588......................\n...............\u2588\u2588\u2588\u2588\u2588\u2588..\u2588........\u2588..........\u2588..........\u2588......\u2588....\u2588......\u2588..........\u2588..........\u2588........\u2588..\u2588\u2588\u2588\u2588\u2588\u2588..........................................\u2588..\u2588..\u2588.\u2588..\u2588.....\u2588..\u2588..\u2588..\u2588....\u2588....\u2588\u2588....\u2588....\u2588..\u2588..\u2588..\u2588.....\u2588..\u2588.\u2588..\u2588..\u2588...............................\u2588\u2588..........\u2588\u2588\u2588.....\u2588..........\u2588..\u2588........\u2588............\u2588.\u2588\u2588.......\u2588...\u2588..\u2588......\u2588.....\u2588..........\u2588.\u2588.......................\n......\u2588\u2588\u2588...\u2588\u2588\u2588......\u2588\u2588\u2588\u2588\u2588\u2588......\u2588.........\u2588..........\u2588......\u2588....\u2588......\u2588..........\u2588.........\u2588......\u2588\u2588\u2588\u2588\u2588\u2588......\u2588\u2588\u2588...\u2588\u2588\u2588..................................\u2588\u2588...\u2588..\u2588\u2588.......\u2588..\u2588\u2588...\u2588.....\u2588...\u2588\u2588...\u2588.....\u2588...\u2588\u2588..\u2588.......\u2588\u2588..\u2588...\u2588\u2588..........................\u2588\u2588\u2588\u2588\u2588\u2588...............\u2588\u2588....\u2588..........\u2588.\u2588.........\u2588...........\u2588\u2588.\u2588.......\u2588...\u2588.\u2588.......\u2588....\u2588..........\u2588.\u2588........................\n.........\u2588\u2588\u2588...............\u2588\u2588\u2588...\u2588..........\u2588.........\u2588.....\u2588......\u2588.....\u2588.........\u2588..........\u2588...\u2588\u2588\u2588...............\u2588\u2588\u2588.....................................\u2588\u2588\u2588..\u2588...\u2588.......\u2588..\u2588\u2588\u2588..\u2588.....\u2588..\u2588..\u2588..\u2588.....\u2588..\u2588\u2588\u2588..\u2588.......\u2588...\u2588..\u2588\u2588\u2588.............................\u2588...................\u2588\u2588\u2588..\u2588.........\u2588.\u2588.........\u2588...........\u2588...\u2588......\u2588...\u2588.\u2588........\u2588..\u2588...........\u2588\u2588.........................\n.......\u2588\u2588.....................\u2588\u2588..\u2588.........\u2588..........\u2588....\u2588......\u2588....\u2588..........\u2588.........\u2588..\u2588\u2588.....................\u2588\u2588.............................\u2588...\u2588\u2588\u2588..\u2588\u2588\u2588...\u2588.....\u2588..\u2588\u2588\u2588..\u2588\u2588\u2588......\u2588.\u2588..\u2588.\u2588......\u2588\u2588\u2588..\u2588\u2588\u2588..\u2588.....\u2588...\u2588\u2588\u2588..\u2588\u2588\u2588...\u2588......................\u2588.......................\u2588\u2588\u2588..........\u2588\u2588..........\u2588.........\u2588.....\u2588....\u2588....\u2588\u2588.........\u2588.\u2588............\u2588.............\u2588............\n................................\u2588\u2588\u2588.........\u2588..........\u2588...\u2588........\u2588...\u2588..........\u2588.........\u2588\u2588\u2588.......................................................\u2588....\u2588....\u2588...\u2588....\u2588....\u2588.....\u2588.......\u2588....\u2588.......\u2588.....\u2588....\u2588....\u2588...\u2588....\u2588....\u2588......................\u2588...........................\u2588\u2588.........\u2588..........\u2588.........\u2588......\u2588...\u2588....\u2588..........\u2588\u2588............\u2588.............\u2588.............\n...................................\u2588\u2588.......\u2588..........\u2588...\u2588........\u2588...\u2588..........\u2588.......\u2588\u2588...........................................................\u2588\u2588..\u2588.....\u2588..\u2588..\u2588\u2588.....\u2588......\u2588......\u2588....\u2588......\u2588......\u2588.....\u2588\u2588..\u2588..\u2588.....\u2588..\u2588\u2588.....................................................\u2588\u2588.......\u2588...........\u2588.......\u2588........\u2588..\u2588....\u2588..........\u2588............\u2588.............\u2588\u2588\u2588\u2588\u2588\u2588.........\n.....................................\u2588.......\u2588..........\u2588..\u2588........\u2588..\u2588..........\u2588.......\u2588.......................................................\u2588.\u2588\u2588\u2588\u2588..\u2588\u2588\u2588.....\u2588..\u2588\u2588\u2588..\u2588\u2588\u2588..\u2588......\u2588......\u2588....\u2588......\u2588......\u2588..\u2588\u2588\u2588..\u2588\u2588\u2588..\u2588.....\u2588\u2588\u2588..\u2588\u2588\u2588\u2588.\u2588.................................................\u2588.......\u2588..........\u2588.......\u2588........\u2588.\u2588.....\u2588..........\u2588............\u2588............\u2588\u2588..\u2588...........\n......................................\u2588......\u2588..........\u2588.\u2588..........\u2588.\u2588..........\u2588......\u2588.........................................................\u2588........\u2588......\u2588.\u2588.........\u2588.......\u2588.....\u2588....\u2588.....\u2588.......\u2588.........\u2588.\u2588......\u2588........\u2588...................................................\u2588......\u2588...........\u2588.....\u2588..........\u2588\u2588.....\u2588.........\u2588............\u2588............\u2588.\u2588\u2588\u2588\u2588\u2588\u2588\u2588........\n.......................................\u2588\u2588....\u2588..........\u2588.\u2588..........\u2588.\u2588..........\u2588....\u2588\u2588..........................................................\u2588....\u2588....\u2588......\u2588.......\u2588..\u2588........\u2588....\u2588....\u2588....\u2588........\u2588..\u2588.......\u2588......\u2588....\u2588....\u2588....................................................\u2588\u2588.....\u2588..........\u2588.....\u2588...........\u2588....\u2588..........\u2588...........\u2588............\u2588\u2588\u2588...............\n.........................................\u2588...\u2588..........\u2588.\u2588..........\u2588.\u2588..........\u2588...\u2588............................................................\u2588.....\u2588....\u2588.....\u2588........\u2588.\u2588........\u2588....\u2588....\u2588....\u2588........\u2588.\u2588........\u2588.....\u2588....\u2588.....\u2588......................................................\u2588....\u2588...........\u2588...\u2588............\u2588....\u2588..........\u2588..........\u2588...........\u2588\u2588..................\n..........................................\u2588...\u2588..........\u2588............\u2588..........\u2588...\u2588.......................................................\u2588.....\u2588.....\u2588\u2588\u2588...\u2588...\u2588.\u2588\u2588\u2588.....\u2588\u2588\u2588.........\u2588\u2588\u2588.\u2588....\u2588.\u2588\u2588\u2588.........\u2588\u2588\u2588.....\u2588\u2588\u2588.\u2588...\u2588...\u2588\u2588\u2588.....\u2588.....\u2588.................................................\u2588...\u2588...........\u2588...\u2588.............\u2588...\u2588.........\u2588...........\u2588.........\u2588\u2588....................\n...........................................\u2588..\u2588..........\u2588............\u2588..........\u2588..\u2588.........................................................\u2588....\u2588...\u2588\u2588...\u2588\u2588.\u2588.\u2588\u2588\u2588\u2588...\u2588\u2588.\u2588\u2588..\u2588\u2588\u2588...\u2588\u2588\u2588\u2588...\u2588\u2588....\u2588\u2588...\u2588\u2588\u2588\u2588...\u2588\u2588\u2588..\u2588\u2588.\u2588\u2588...\u2588\u2588\u2588\u2588.\u2588.\u2588\u2588...\u2588\u2588...\u2588....\u2588...................................................\u2588\u2588..\u2588...........\u2588.\u2588..............\u2588...\u2588.........\u2588..........\u2588........\u2588\u2588......................\n............................................\u2588.\u2588..........\u2588............\u2588..........\u2588.\u2588........................................................\u2588\u2588\u2588\u2588\u2588\u2588.\u2588..........\u2588\u2588\u2588.\u2588.......\u2588\u2588\u2588..\u2588..\u2588\u2588\u2588........\u2588\u2588\u2588\u2588\u2588\u2588........\u2588\u2588\u2588..\u2588..\u2588\u2588\u2588.......\u2588.\u2588\u2588\u2588..........\u2588.\u2588\u2588\u2588\u2588\u2588\u2588...................................................\u2588.\u2588...........\u2588.\u2588..............\u2588...\u2588........\u2588..........\u2588........\u2588................\u2588\u2588......\n.............................................\u2588.\u2588.........\u2588............\u2588.........\u2588.\u2588...............................................................\u2588\u2588.........\u2588...\u2588...........\u2588\u2588\u2588.\u2588...........\u2588\u2588\u2588\u2588\u2588\u2588...........\u2588.\u2588\u2588\u2588...........\u2588...\u2588.........\u2588\u2588..........................................................\u2588\u2588............\u2588...............\u2588..\u2588.........\u2588.........\u2588.....\u2588\u2588\u2588\u2588\u2588...............\u2588........\n..............................................\u2588\u2588.........\u2588............\u2588.........\u2588\u2588..................................................................\u2588........\u2588...\u2588.............\u2588\u2588............\u2588....\u2588............\u2588\u2588.............\u2588...\u2588........\u2588.............................................................\u2588\u2588...........\u2588...............\u2588..\u2588.........\u2588.........\u2588\u2588\u2588\u2588\u2588\u2588.....\u2588\u2588\u2588\u2588......\u2588\u2588\u2588\u2588\u2588\u2588........\n...............................................\u2588.........\u2588............\u2588.........\u2588...................................................................\u2588.......\u2588....\u2588.............\u2588\u2588...........\u2588......\u2588...........\u2588\u2588.............\u2588....\u2588.......\u2588..............................................................\u2588...........\u2588................\u2588.\u2588........\u2588........\u2588\u2588\u2588..............\u2588\u2588\u2588\u2588\u2588\u2588......\u2588\u2588\u2588.....\n................................................\u2588........\u2588............\u2588........\u2588.....................................................................\u2588..\u2588\u2588\u2588\u2588.....\u2588..........\u2588\u2588\u2588.\u2588...........\u2588......\u2588...........\u2588.\u2588\u2588\u2588..........\u2588.....\u2588\u2588\u2588\u2588..\u2588................................................................\u2588..........\u2588................\u2588.\u2588........\u2588......\u2588\u2588.....................\u2588\u2588..............\n................................................\u2588........\u2588............\u2588........\u2588.....................................................................\u2588.....\u2588.....\u2588............\u2588..\u2588.........\u2588........\u2588.........\u2588..\u2588............\u2588.....\u2588.....\u2588.................................................................\u2588.........\u2588................\u2588.\u2588........\u2588....\u2588\u2588.........................\u2588\u2588\u2588...........\n.................................................\u2588.......\u2588............\u2588.......\u2588...........................................................\u2588...........\u2588...\u2588......\u2588............\u2588...\u2588.......\u2588..........\u2588.......\u2588...\u2588............\u2588......\u2588...\u2588...........\u2588......................................................\u2588.........\u2588................\u2588.\u2588.......\u2588....\u2588..............................\u2588\u2588\u2588........\n..................................................\u2588......\u2588............\u2588......\u2588.............................................................\u2588...........\u2588.........\u2588.................\u2588.....\u2588............\u2588.....\u2588.................\u2588.........\u2588...........\u2588........................................................\u2588........\u2588.................\u2588........\u2588..\u2588\u2588................................\u2588.........\n...................................................\u2588.....\u2588............\u2588.....\u2588............................................................\u2588\u2588\u2588\u2588\u2588\u2588\u2588.....\u2588\u2588\u2588\u2588\u2588.......\u2588.................\u2588.....\u2588............\u2588.....\u2588.................\u2588.......\u2588\u2588\u2588\u2588\u2588.....\u2588\u2588\u2588\u2588\u2588\u2588\u2588.......................................................\u2588.......\u2588.................\u2588........\u2588\u2588\u2588............................................\n...................................................\u2588.....\u2588............\u2588.....\u2588................................................................\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.....\u2588\u2588\u2588....\u2588..................\u2588...\u2588..............\u2588...\u2588..................\u2588....\u2588\u2588\u2588.....\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588............................................................\u2588......\u2588.................\u2588.......\u2588\u2588..............................................\n....................................................\u2588....\u2588............\u2588....\u2588..................................................................\u2588\u2588.............\u2588\u2588\u2588\u2588\u2588...................\u2588.\u2588................\u2588.\u2588...................\u2588\u2588\u2588\u2588\u2588.............\u2588\u2588..............................................................\u2588......\u2588................\u2588.......\u2588...............................................\n.....................................................\u2588...\u2588............\u2588...\u2588.............................................................\u2588.....\u2588\u2588.................\u2588...................\u2588.\u2588................\u2588.\u2588...................\u2588.................\u2588\u2588.....\u2588.........................................................\u2588.....\u2588................\u2588......\u2588................................................\n.....................................................\u2588...\u2588............\u2588...\u2588..............................................................\u2588....\u2588...................\u2588...................\u2588..................\u2588...................\u2588...................\u2588....\u2588..........................................................\u2588.....\u2588................\u2588.....\u2588.................................................\n......................................................\u2588..\u2588............\u2588..\u2588.............................................................\u2588\u2588\u2588\u2588\u2588.\u2588\u2588...................\u2588...................\u2588..................\u2588...................\u2588...................\u2588\u2588.\u2588\u2588\u2588\u2588\u2588.........................................................\u2588....\u2588................\u2588.....\u2588.................................................\n.......................................................\u2588.\u2588............\u2588.\u2588.................................................................\u2588\u2588\u2588\u2588\u2588....................\u2588..................\u2588..................\u2588..................\u2588....................\u2588\u2588\u2588\u2588\u2588.............................................................\u2588...\u2588................\u2588....\u2588..................................................\n........................................................\u2588\u2588............\u2588\u2588.....................................................................\u2588\u2588.....................\u2588.................\u2588..................\u2588.................\u2588.....................\u2588\u2588.................................................................\u2588..\u2588................\u2588...\u2588...................................................\n........................................................\u2588\u2588............\u2588\u2588....................................................................\u2588..\u2588....................\u2588.................\u2588..................\u2588.................\u2588....................\u2588..\u2588.................................................................\u2588.\u2588................\u2588...\u2588...................................................\n.........................................................\u2588............\u2588........................................................................\u2588.....................\u2588................\u2588..................\u2588................\u2588.....................\u2588....................................................................\u2588.\u2588................\u2588..\u2588....................................................\n.........................................................\u2588............\u2588.........................................................................\u2588.....................\u2588...............\u2588..................\u2588...............\u2588.....................\u2588......................................................................\u2588\u2588................\u2588.\u2588.....................................................\n..........................................................\u2588..........\u2588...............................................................\u2588...........\u2588....................\u2588...............\u2588..................\u2588...............\u2588....................\u2588...........\u2588............................................................\u2588................\u2588\u2588......................................................\n..........................................................\u2588..........\u2588................................................................\u2588..........\u2588.....................\u2588..............\u2588..................\u2588..............\u2588.....................\u2588..........\u2588.............................................................\u2588................\u2588\u2588......................................................\n..........................................................\u2588..........\u2588..............................................................\u2588\u2588\u2588\u2588\u2588.........\u2588\u2588\u2588..................\u2588..............\u2588..................\u2588..............\u2588..................\u2588\u2588\u2588.........\u2588\u2588\u2588\u2588\u2588............................................................\u2588...............\u2588.......................................................\n...........................................................\u2588.........\u2588...................................................................\u2588\u2588...\u2588\u2588\u2588\u2588...\u2588\u2588\u2588..............\u2588\u2588\u2588\u2588\u2588...........\u2588..................\u2588...........\u2588\u2588\u2588\u2588\u2588..............\u2588\u2588\u2588...\u2588\u2588\u2588\u2588...\u2588\u2588.................................................................\u2588...............\u2588.......................................................\n...........................................................\u2588........\u2588......................................................................\u2588\u2588\u2588..........\u2588\u2588\u2588.....\u2588\u2588\u2588\u2588\u2588\u2588.....\u2588\u2588\u2588........\u2588..................\u2588........\u2588\u2588\u2588.....\u2588\u2588\u2588\u2588\u2588\u2588.....\u2588\u2588\u2588..........\u2588\u2588\u2588...................................................................\u2588..............\u2588........................................................\n...........................................................\u2588........\u2588.....................................................................\u2588................\u2588\u2588\u2588\u2588\u2588..............\u2588\u2588......\u2588..................\u2588......\u2588\u2588..............\u2588\u2588\u2588\u2588\u2588................\u2588...................................................................\u2588.............\u2588........................................................\n............................................................\u2588.......\u2588....................................................................\u2588................\u2588.....................\u2588\u2588\u2588...\u2588..................\u2588...\u2588\u2588\u2588.....................\u2588................\u2588..................................................................\u2588.............\u2588........................................................\n............................................................\u2588......\u2588...................................................................\u2588\u2588.................\u2588........................\u2588\u2588\u2588\u2588..................\u2588\u2588\u2588\u2588........................\u2588.................\u2588\u2588.................................................................\u2588...........\u2588.........................................................\n............................................................\u2588......\u2588.................................................................\u2588\u2588\u2588.................\u2588............................\u2588..................\u2588............................\u2588.................\u2588\u2588\u2588...............................................................\u2588...........\u2588.........................................................\n.............................................................\u2588.....\u2588...................................................................\u2588................\u2588..............................\u2588................\u2588..............................\u2588................\u2588.................................................................\u2588...........\u2588.........................................................\n.............................................................\u2588.....\u2588...................................................................\u2588...............\u2588...............................\u2588................\u2588...............................\u2588...............\u2588..................................................................\u2588.........\u2588..........................................................\n.............................................................\u2588....\u2588....................................................................\u2588...............\u2588................................\u2588..............\u2588................................\u2588...............\u2588..................................................................\u2588.........\u2588..........................................................\n..............................................................\u2588...\u2588.....................................................................\u2588.............\u2588..................................\u2588.............\u2588.................................\u2588.............\u2588...................................................................\u2588........\u2588...........................................................\n..............................................................\u2588...\u2588...................................................................\u2588\u2588\u2588\u2588\u2588.........\u2588\u2588...................................\u2588............\u2588...................................\u2588\u2588.........\u2588\u2588\u2588\u2588\u2588..................................................................\u2588.......\u2588...........................................................\n..............................................................\u2588..\u2588.........................................................................\u2588\u2588...\u2588\u2588\u2588\u2588.\u2588....................................\u2588..........\u2588....................................\u2588.\u2588\u2588\u2588\u2588...\u2588\u2588.......................................................................\u2588.......\u2588...........................................................\n...............................................................\u2588.\u2588...........................................................................\u2588\u2588\u2588.....\u2588.....................................\u2588.........\u2588....................................\u2588.....\u2588\u2588\u2588.........................................................................\u2588......\u2588............................................................\n...............................................................\u2588.\u2588..........................................................................\u2588........\u2588.....................................\u2588........\u2588.....................................\u2588........\u2588.........................................................................\u2588.....\u2588............................................................\n...............................................................\u2588.\u2588.........................................................................\u2588.........\u2588......................................\u2588.......\u2588.....................................\u2588.........\u2588........................................................................\u2588.....\u2588............................................................\n................................................................\u2588.........................................................................\u2588.........\u2588........................................\u2588.....\u2588.......................................\u2588.........\u2588........................................................................\u2588...\u2588.............................................................\n................................................................\u2588.......................................................................\u2588\u2588\u2588.........\u2588........................................\u2588....\u2588........................................\u2588.........\u2588\u2588\u2588......................................................................\u2588...\u2588.............................................................\n................................................................\u2588.........................................................................\u2588.........\u2588.........................................\u2588...\u2588........................................\u2588.........\u2588........................................................................\u2588...\u2588.............................................................\n................................................................\u2588.........................................................................\u2588........\u2588\u2588..........................................\u2588.\u2588.........................................\u2588\u2588........\u2588.........................................................................\u2588.\u2588..............................................................\n................................................................\u2588.................................................................................\u2588..\u2588.........................................\u2588.\u2588........................................\u2588..\u2588.................................................................................\u2588.\u2588..............................................................\n................................................................\u2588................................................................................\u2588...\u2588..........................................\u2588.........................................\u2588...\u2588................................................................................\u2588.\u2588..............................................................\n................................................................\u2588...............................................................................\u2588....\u2588..........................................\u2588.........................................\u2588....\u2588................................................................................\u2588...............................................................\n................................................................\u2588.............................................................................\u2588\u2588\u2588.....\u2588.........................................\u2588........................................\u2588.....\u2588\u2588\u2588..............................................................................\u2588...............................................................\n................................................................\u2588...............................................................................\u2588.....\u2588\u2588\u2588.......................................\u2588......................................\u2588\u2588\u2588.....\u2588................................................................................\u2588...............................................................\n................................................................\u2588.....................................................................................\u2588.........................................\u2588........................................\u2588......................................................................................\u2588...............................................................\n................................................................\u2588...............................................................................................................................\u2588...............................................................................................................................\u2588...............................................................\n................................................................\u2588...............................................................................................................................\u2588...............................................................................................................................\u2588...............................................................\n................................................................\u2588...............................................................................................................................\u2588...............................................................................................................................\u2588...............................................................\n................................................................\u2588...............................................................................................................................\u2588...............................................................................................................................\u2588...............................................................\n................................................................\u2588...............................................................................................................................\u2588...............................................................................................................................\u2588...............................................................\n................................................................\u2588...............................................................................................................................\u2588...............................................................................................................................\u2588...............................................................\n................................................................\u2588...............................................................................................................................\u2588...............................................................................................................................\u2588...............................................................\n................................................................\u2588...............................................................................................................................\u2588...............................................................................................................................\u2588...............................................................\n................................................................\u2588...............................................................................................................................\u2588...............................................................................................................................\u2588...............................................................\n................................................................\u2588...............................................................................................................................\u2588...............................................................................................................................\u2588...............................................................\n................................................................\u2588...............................................................................................................................\u2588...............................................................................................................................\u2588...............................................................\n................................................................\u2588...............................................................................................................................\u2588...............................................................................................................................\u2588...............................................................\n................................................................\u2588...............................................................................................................................\u2588...............................................................................................................................\u2588...............................................................\n................................................................\u2588...............................................................................................................................\u2588...............................................................................................................................\u2588...............................................................\n................................................................\u2588...............................................................................................................................\u2588...............................................................................................................................\u2588...............................................................\n................................................................\u2588...............................................................................................................................\u2588...............................................................................................................................\u2588...............................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n................................................................................................................................................................................................................................................................................................................................................................................................\n", "explain": "Needs L\u00d6VE 2D Engine\nUsing the Bitmap class and text renderer from here, then extending...\nShown at 25% scale:\n"}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Scala", "code": "\n\nimport swing._\nimport java.awt.{RenderingHints, BasicStroke, Color}\n\nobject FractalTree extends SimpleSwingApplication {\n  val DEPTH = 9\n\n  def top = new MainFrame {\n    contents = new Panel {\n      preferredSize = new Dimension(600, 500)\n\n      override def paintComponent(g: Graphics2D) {\n        draw(300, 460, -90, DEPTH)\n\n        def draw(x1: Int, y1: Int, angle: Double, depth: Int) {\n          if (depth > 0) {\n            val x2 = x1 + (math.cos(angle.toRadians) * depth * 10).toInt\n            val y2 = y1 + (math.sin(angle.toRadians) * depth * 10).toInt\n\n            g.setColor(Color.getHSBColor(0.25f - depth * 0.125f / DEPTH, 0.9f, 0.6f))\n            g.setStroke(new BasicStroke(depth))\n            g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON)\n            g.drawLine(x1, y1, x2, y2)\n\n            draw(x2, y2, angle - 20, depth - 1)\n            draw(x2, y2, angle + 20, depth - 1)\n          }\n        }\n      }\n    }\n  }\n}\n\n\n", "explain": "Adapted from the Java version. Screenshot below.\n\n"}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "D", "code": "\nSVG Version[edit]\nTranslation of: Raku\nimport std.stdio, std.math;\n\nenum width = 1000, height = 1000; // Image dimension.\nenum length = 400;                // Trunk size.\nenum scale = 6.0 / 10;            // Branch scale relative to trunk.\n\nvoid tree(in double x, in double y, in double length, in double angle) {\n    if (length < 1)\n        return;\n    immutable x2 = x + length * angle.cos;\n    immutable y2 = y + length * angle.sin;\n    writefln(\"<line x1='%f' y1='%f' x2='%f' y2='%f' \" ~\n             \"style='stroke:black;stroke-width:1'/>\", x, y, x2, y2);\n    tree(x2, y2, length * scale, angle + PI / 5);\n    tree(x2, y2, length * scale, angle - PI / 5);\n}\n\nvoid main() {\n    \"<svg width='100%' height='100%' version='1.1'\n     xmlns='http://www.w3.org/2000/svg'>\".writeln;\n    tree(width / 2.0, height, length, 3 * PI / 2);\n    \"</svg>\".writeln;\n}\n\nTurtle Version[edit]\n\nTranslation of: Logo\nimport grayscale_image, turtle;\n\nvoid tree(Color)(Image!Color img, ref Turtle t, in uint depth,\n                 in real step, in real scale, in real angle) {\n    if (depth == 0) return;\n    t.forward(img, step);\n    t.right(angle);\n    img.tree(t, depth - 1, step * scale, scale, angle);\n    t.left(2 * angle);\n    img.tree(t, depth - 1, step * scale, scale, angle);\n    t.right(angle);\n    t.forward(img, -step);\n}\n\nvoid main() {\n    auto img = new Image!Gray(330, 300);\n    auto t = Turtle(165, 270, -90);\n    img.tree(t, 10, 80, 0.7, 30);\n    img.savePGM(\"fractal_tree.pgm\");\n}\n\nAlternative version[edit]\nTranslation of: Java\n\nimport dfl.all;\nimport std.math;\n\nclass FractalTree: Form {\n\n    private immutable DEG_TO_RAD = PI / 180.0;\n\n    this() {\n        width = 600;\n        height = 500;\n        text = \"Fractal Tree\";\n        backColor = Color(0xFF, 0xFF, 0xFF);\n        startPosition = FormStartPosition.CENTER_SCREEN;\n        formBorderStyle = FormBorderStyle.FIXED_DIALOG;\n        maximizeBox = false;\n    }\n\n    private void drawTree(Graphics g, Pen p, int x1, int y1, double angle, int depth) {\n        if (depth == 0) return;\n        int x2 = x1 + cast(int) (cos(angle * DEG_TO_RAD) * depth * 10.0);\n        int y2 = y1 + cast(int) (sin(angle * DEG_TO_RAD) * depth * 10.0);\n        g.drawLine(p, x1, y1, x2, y2);\n        drawTree(g, p, x2, y2, angle - 20, depth - 1);\n        drawTree(g, p, x2, y2, angle + 20, depth - 1);\n    }\n    \n    protected override void onPaint(PaintEventArgs ea){\n        super.onPaint(ea);\n        Pen p = new Pen(Color(0, 0xAA, 0));\n        drawTree(ea.graphics, p, 300, 450, -90, 9);\n    }\n}\n\nint main() {\n    int result = 0; \n    try {\n        Application.run(new FractalTree);\n    } catch(Exception e) {\n        msgBox(e.msg, \"Fatal Error\", MsgBoxButtons.OK, MsgBoxIcon.ERROR);        \n        result = 1;\n    }   \n    return result;\n}\n\n", "explain": "This uses the turtle module from the Dragon Curve task, and the module from the Grayscale Image task.\nUsing DFL.\n"}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Haskell", "code": "\n\nLibrary: Gloss\nimport Graphics.Gloss\n\ntype Model = [Picture -> Picture]\n       \nfractal :: Int -> Model -> Picture -> Picture\nfractal n model pict = pictures $ take n $ iterate (mconcat model) pict\n\ntree1 _ = fractal 10 branches $ Line [(0,0),(0,100)]\n  where branches = [ Translate 0 100 . Scale 0.75 0.75 . Rotate 30 \n                   , Translate 0 100 . Scale 0.5 0.5 . Rotate (-30) ]\n\nmain = animate (InWindow \"Tree\" (800, 800) (0, 0)) white $ tree1 . (* 60)\n\n\n--animated tree\ntree2 t = fractal 8 branches $ Line [(0,0),(0,100)]\n  where branches = [ Translate 0 100 . Scale 0.75 0.75 . Rotate t\n                   , Translate 0 100 . Scale 0.6 0.6 . Rotate 0\n                   , Translate 0 100 . Scale 0.5 0.5 . Rotate (-2*t) ]\n\n--animated fractal clock\ncircles t = fractal 10 model $ Circle 100\n  where model = [ Translate 0 50 . Scale 0.5 0.5 . Rotate t\n                , Translate 0 (-50) . Scale 0.5 0.5 . Rotate (-2*t) ]\n\n--Pythagoras tree\npithagor _ = fractal 10 model $ rectangleWire 100 100\n  where model = [ Translate 50 100 . Scale s s . Rotate 45\n                , Translate (-50) 100 . Scale s s . Rotate (-45)]\n        s = 1/sqrt 2\n\n--Sierpinski pentagon\npentaflake _ = fractal 5 model $ pentagon\n  where model =  map copy [0,72..288]\n        copy a = Scale s s . Rotate a . Translate 0 x\n        pentagon = Line [ (sin a, cos a) | a <- [0,2*pi/5..2*pi] ]\n        x = 2*cos(pi/5)\n        s = 1/(1+x)\n\n\nLibrary: HGL\nimport Graphics.HGL.Window\nimport Graphics.HGL.Run\nimport Control.Arrow\nimport Control.Monad\nimport Data.List\n\nenumBase :: Int -> Int -> [[Int]]\nenumBase n = mapM (enumFromTo 0). replicate n. pred\n\npsPlus (a,b) (p,q) = (a+p, b+q)\n\ntoInt :: Double -> Int\ntoInt = fromIntegral.round\n\nintPoint = toInt *** toInt\n  \npts n = \n  map (map (intPoint.psPlus (100,0)). ((0,300):). scanl1 psPlus. ((r,300):). zipWith (\\h a -> (h*cos a, h*sin a)) rs) hs\n  where\n    [r,h,sr,sh] = [50, pi/5, 0.9, 0.75]\n    rs   = take n $ map (r*) $ iterate(*sr) sr\n    lhs  = map (map (((-1)**).fromIntegral)) $ enumBase n 2\n    rhs  = take n $ map (h*) $ iterate(*sh) 1\n    hs   = map (scanl1 (+). zipWith (*)rhs) lhs\n\nfractalTree :: Int -> IO ()\nfractalTree n =\n   runWindow \"Fractal Tree\" (500,600)\n    (\\w -> setGraphic w (overGraphics ( map polyline $ pts (n-1))) >> getKey w)\n\nmain = fractalTree 10\n\n", "explain": "An elegant yet universal monoidal solution.\nThe solution gives rise to a variety of fractal geometric structures. Each one can be used by substituting tree1 in the main function by the desired one.\nAlternative solution\nUsing the method of the J contribution.\n"}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Scheme", "code": "\n\n(import (scheme base)\n        (scheme file)\n        (scheme inexact)\n        (scheme write))\n\n(define *scale* 10) ; controls overall size of tree\n(define *split* 20) ; controls angle of split (in degrees)\n\n;; construct lines for tree as list of 5-tuples (x1 y1 x2 y2 depth)\n;; - x1 y1 is start point\n;; - angle of this line, in radians\n;; - depth, depth within tree (controls length of line)\n(define (create-tree x1 y1 angle depth)\n  (define (degrees->radians d)\n    (let ((pi 3.14159265358979323846264338327950288419716939937510582097))\n      (* d pi 1/180)))\n  ;\n  (if (zero? depth)\n    '()\n    (let ((x2 (+ x1 (* (cos (degrees->radians angle)) depth *scale*)))\n          (y2 (+ y1 (* (sin (degrees->radians angle)) depth *scale*))))\n      (append (list (map truncate (list x1 y1 x2 y2 depth)))\n              (create-tree x2 y2 (- angle *split*) (- depth 1))\n              (create-tree x2 y2 (+ angle *split*) (- depth 1))))))\n\n;; output the tree to an eps file\n(define (output-tree-as-eps filename tree)\n  (when (file-exists? filename) (delete-file filename))\n  (with-output-to-file\n    filename\n    (lambda ()\n      (display \"%!PS-Adobe-3.0 EPSF-3.0\\n%%BoundingBox: 0 0 800 800\\n\") \n\n      ;; add each line - sets linewidth based on depth in tree\n      (for-each (lambda (line)\n                  (display\n                    (string-append \"newpath\\n\"\n                                   (number->string (list-ref line 0)) \" \"\n                                   (number->string (list-ref line 1)) \" \"\n                                   \"moveto\\n\"\n                                   (number->string (list-ref line 2)) \" \"\n                                   (number->string (list-ref line 3)) \" \"\n                                   \"lineto\\n\"\n                                   (number->string (truncate (/ (list-ref line 4) 2)))\n                                   \" setlinewidth\\n\"\n                                   \"stroke\\n\"\n                                   )))\n                tree)\n      (display \"\\n%%EOF\"))))\n\n(output-tree-as-eps \"fractal.eps\" (create-tree 400 200 90 9))\n\n", "explain": "The tree is created as a list of line segments, which can then be drawn on a required device.  For this program, the tree is output to an eps file.\n"}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "TypeScript", "code": "\nTranslation of: JavaScript\n// Set up canvas for drawing\nvar canvas: HTMLCanvasElement = document.createElement('canvas')\ncanvas.width = 600\ncanvas.height = 500\ndocument.body.appendChild(canvas)\nvar ctx: CanvasRenderingContext2D = canvas.getContext('2d')\nctx.fillStyle = '#000'\nctx.lineWidth = 1\n\n// constants\nconst degToRad: number = Math.PI / 180.0\nconst totalDepth: number = 9\n\n/** Helper function that draws a line on the canvas */\nfunction drawLine(x1: number, y1: number, x2: number, y2: number): void {\n    ctx.moveTo(x1, y1)\n    ctx.lineTo(x2, y2)\n}\n\n/** Draws a branch at the given point and angle and then calls itself twice */\nfunction drawTree(x1: number, y1: number, angle: number, depth: number): void {\n    if (depth !== 0) {\n        let x2: number = x1 + (Math.cos(angle * degToRad) * depth * 10.0)\n        let y2: number = y1 + (Math.sin(angle * degToRad) * depth * 10.0)\n        drawLine(x1, y1, x2, y2)\n        drawTree(x2, y2, angle - 20, depth - 1)\n        drawTree(x2, y2, angle + 20, depth - 1)\n    }\n}\n\n// actual drawing of tree\nctx.beginPath()\ndrawTree(300, 500, -90, totalDepth)\nctx.closePath()\nctx.stroke()\n\n", "explain": ""}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "Logo", "code": "\nto tree :depth :length :scale :angle\n  if :depth=0 [stop]\n  setpensize round :depth/2\n  forward :length\n  right :angle\n  tree :depth-1 :length*:scale :scale :angle\n  left 2*:angle\n  tree :depth-1 :length*:scale :scale :angle\n  right :angle\n  back :length\nend\n\nclearscreen\ntree 10 80 0.7 30\n", "explain": ""}, {"task_name": "Fractal tree", "task_url": "https://rosettacode.org/wiki/Fractal_tree", "task_cat": "Recursion", "lang": "F#", "code": "\nTranslation of: Raku\nlet (cos, sin, pi) = System.Math.Cos, System.Math.Sin, System.Math.PI\n\nlet (width, height) = 1000., 1000. // image dimension\nlet scale = 6./10.                 // branch scale relative to trunk\nlet length = 400.                  // trunk size\n\nlet rec tree x y length angle =\n    if length >= 1. then\n        let (x2, y2) = x + length * (cos angle),  y + length * (sin angle)\n        printfn \"<line x1='%f' y1='%f' x2='%f' y2='%f' style='stroke:rgb(0,0,0);stroke-width:1'/>\"\n            x y x2 y2\n        tree x2 y2 (length*scale) (angle + pi/5.)\n        tree x2 y2 (length*scale) (angle - pi/5.)\n\nprintfn \"<?xml version='1.0' encoding='utf-8' standalone='no'?>\n<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' \n'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'>\n<svg width='100%%' height='100%%' version='1.1'\nxmlns='http://www.w3.org/2000/svg'>\"\ntree (width/2.) height length (3.*pi/2.)\nprintfn \"</svg>\"\n\n", "explain": ""}]